openapi: 3.0.1
info:
  title: openFinance API Framework
  version: "1.0.0_2021-12-21"
  description: |
    # General Approach for openFinance
    With [PSD2] the European Union has published a directive on payment services in the internal 
    market. Among others [PSD2] contains regulations on services to be operated by so called
    Third Party Payment Service Providers (TPP) on behalf of a Payment Service User (PSU).
    
    These services are
      * Payment Initiation Service (PIS) to be operated by a Payment Initiation Service 
      Provider (PISP) TPP as defined by article 66 of [PSD2],
      * Account Information Service (AIS) to be operated by an Account Information Service
      Provider (AISP) TPP as defined by article 67 of [PSD2], and
      * Confirmation on the Availability of Funds Service (FCS) to be used by a Payment
      Instrument Issuing Service Provider (PIISP) TPP as defined by article 65 of [PSD2].
      
    To implement these services (subject to PSU consent) a TPP needs to access the account of
    the PSU. The account is managed by another PSP called the Account Servicing Payment
    Service Provider (ASPSP). To support the TPP in accessing the accounts managed by an
    ASPSP, each ASPSP has to provide an "access to account interface" (XS2A interface). Such
    an interface has been defined in the Berlin Group NextGenPSD2 XS2A Framework.
    
    This XS2A Framework is now planned to be extended to extended services. This interface is
    addressed in the following as openFinance API. This openFinance API differs from the XS2A 
    interface in several dimensions:
      * The extended services might not rely anymore solely on PSD2.
      * Other important regulatory frameworks which apply are e.g. GDPR.
      * The openFinance API can address different types of API Clients as access clients,
      e.g. TPPs regulated by an NCA according to PSD2, or corporates not regulated by an NCA.
      * The extended services might require contracts between the access client and the ASPSP.
      * While the client identification at the openFinance API can still be based on eIDAS certificates, 
      they do not need to be necessarily PSD2 compliant eIDAS certificates.
      * The extended services might require e.g. the direct involvement of the access client's bank for KYC processes.
      
    Note: The notions of API Client and ASPSP are used because of the technical standardisation
    perspective of the openFinance API. These terms are analogous to "asset broker" and "asset
    holder" resp. in the work of the ERPB on a SEPA API access scheme.
    Push Account Information Services â€“ Implementation Guidelines Introduction
    Published by the Berlin Group under Creative Commons Attribution-NoDerivatives 4.0 International Public License Page 2
    (ref. License Notice for full license conditions).
    Note: In implementations, the API services of several ASPSPs might be provided on an
    aggregation platform. Such platforms will be addressed in the openFinance API Framework
    as "API provider".
    
    The ASPSP may restrict the access to the services offered at its openFinance API and require
    dedicated onboarding. The requirements for the rights to access to services offered at the
    openFinance API are out of scope of this document. These requirements are described in a
    dedicated operational rules document [oFA-OR-ADM].
          
    # Push Account Information Service

    The Berlin Group definition of UTF-8 strings in context of the PSD2 API has to support at least the following characters
    The core XS2A Interface as introduced above is for Account Information Services (AIS) in
    general based on a "pull philosophy": The TPP can pull AIS related information from the
    ASPSP once the PSU has given his/her consent and the PSU is authenticated by SCA
    methods provided by the ASPSP. Triggers for pulling can be the PSU as such (PSU present
    at the TPP's application asking for a refresh) or a 4 times offline (PSU not present) access of
    the TPP to the PSU's accounts per day.
    
    A first "push functionality" was introduced in the core XS2A interface for informing the TPP
    about technical status changes of major API resources which have been submitted by the TPP
    itself, e.g. an information that a payment has been authorised by the PSU in a decoupled SCA
    process. The core XS2A interface does not support pushing new financial account related
    information like new account entries for e.g. incoming instant payments.
    It is now planned to introduce a service to enable ASPSPs to inform PSUs via API Client
    systems about account information into the openFinance API Framework. This service might
    require a contract between the API Client and the ASPSP. It is called in the following Push
          
    ## General Remarks on Data Types

    The Berlin Group definition of UTF-8 strings in context of the PSD2 API has to support at least the following characters

    a b c d e f g h i j k l m n o p q r s t u v w x y z
    
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    
    0 1 2 3 4 5 6 7 8 9
    
    / - ? : ( ) . , ' +
    
    Space

  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/
  #termsOfService: URL for Terms of Service of the API
  contact:
    name: The Berlin Group - A European Standards Initiative
    url: https://www.berlin-group.org/
    email: info@berlin-group.org

externalDocs:
  description: |
    Full Documentation of openFinance Framework
  url: https://www.berlin-group.org/openfinance-downloads
#TODO
servers:
  - url: https://api.testbank.com/openFinance
    description: openFinance server of the ASPSP
  - url: https://test-api.testbank.com/openFinance
    description: Optional openFinance test server

paths:

  #####################################################
  # Subscription Endpoints
  #####################################################

  /subscriptions/{push-accountinformation-subservice}:
  
    post:
      summary: Initiate Subscription
      description: | 
        This method is used to create a new subscription resource in the ASPSP server.
      
        Each request will create a subscription for one type of sub service. The default list of sub 
        services supported in this standard is:
          * push-account-entries
          * push-account-statements
          * push-balances
          * push-requests-to-pay
      operationId: initiateSubscription
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional general header parameters
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/Client-Explicit-Authorisation-Preferred"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #conditional (Only applies where a contract is mandated by theASPSP )
        - $ref: "#/components/parameters/Contract-ID"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Decoupled-Preferred"
        
      requestBody: 
        $ref: "#/components/requestBodies/subscriptionInitiation"
      
      responses: 
        '201': 
          $ref: "#/components/responses/CREATED_201_SubscriptionInitiation"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /v1/subscriptions/{push-accountinformation-subservice}/{subscriptionId}:
  
    get:
      summary: read the details of a previously created subscription
      description: | 
        This method is used to read the content of an existing subscription resource from the ASPSP server.
      
      operationId: readSubscriptionDetails
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
      #NO REQUEST BODY
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ReadSubscriptionDetails"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"

    delete:
      summary: cancel a previously created subscription
      description: | 
        This method is used to cancel an existing subscription.
      
      operationId: cancelSubscription
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
      #NO REQUEST BODY
      
      responses:
        '204':
          $ref: "#/components/responses/OK_204_CancelSubscription"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"



  /v1/subscriptions/{push-accountinformation-subservice}/{subscriptionId}/status:
  
    get:
      summary: read the status of a previously created subscription
      description: | 
        This method is used to read the status of an existing subscription resource from the ASPSP server.
      
      operationId: readSubscriptionStatus
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
      #NO REQUEST BODY
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ReadSubscriptionStatus"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /subscriptions/{push-accountinformation-subservice}/{subscriptionId}/authorisations:

    post: 
      summary: Start the authorisation process for a subscription initiation
      description: | 
        Create an authorisation sub-resource and start the authorisation process. 
        The message might in addition transmit authentication and authorisation related data. 
        
        This method is iterated n times for a n times SCA authorisation in a 
        corporate context, each creating an own authorisation sub-endpoint for 
        the corresponding PSU authorising the transaction.
        
        The ASPSP might make the usage of this access method unnecessary in case 
        of only one SCA process needed, since the related authorisation resource 
        might be automatically created by the ASPSP after the submission of the 
        payment data with the first POST payments/{payment-product} call.
        
        The start authorisation process is a process which is needed for creating a new authorisation 
        or cancellation sub-resource. 
        
        This applies in the following scenarios:
        
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding Payment 
            initiation response that an explicit start of the authorisation process is needed by the TPP. 
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be 
            uploaded by using the extended forms:
            * 'startAuthorisationWithPsuIdentification'
            * 'startAuthorisationWithPsuAuthentication'
            * 'startAuthorisationWithEncryptedPsuAuthentication'
            * 'startAuthorisationWithAuthentciationMethodSelection'
          * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding 
            Payment cancellation response that an explicit start of the authorisation process is needed by the TPP. 
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded 
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for 
            executing the cancellation.
          * The signing basket needs to be authorised yet.
      operationId: startSubscriptionAuthorisation
      tags: 
        - Push Account Information Service
        - Common Services
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation" 
      
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /subscriptions/{push-accountinformation-subservice}/{subscriptionId}/authorisations/{authorisationId}:

    put: 
      summary: Update PSU data for subscription initiation
      description: |
        This methods updates PSU data on the authorisation resource if needed. 
        It may authorise a payment within the Embedded SCA Approach where needed.
        
        Independently from the SCA Approach it supports e.g. the selection of 
        the authentication method and a non-SCA PSU authentication.

        There are several possible update PSU data requests in the context of payment initiation services needed, 
        which depends on the SCA approach:
        
        * Redirect SCA Approach:
          A specific update PSU data request is applicable for 
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific update PSU data request is only applicable for
          * adding the PSU identification, if not provided yet in the payment initiation request or the account information consent request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach: 
          The Update PSU Data request might be used 
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorisation.
      
        The SCA Approach might depend on the chosen SCA method. 
        For that reason, the following possible Update PSU data request can apply to all SCA approaches:
        
        * Select an SCA method in case of several SCA methods are available for the customer.
      
        There are the following request types on this access path:
          * Update PSU identification
          * Update PSU authentication
          * Select PSU authorization method 
            WARNING: This method needs a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
          * Transaction authorisation
            WARNING: This method needs a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
      operationId: updatePaymentPsuData
      tags: 
        - Push Account Information Service
        - Common Services
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content: 
          application/json:
            schema:
              oneOf: #Different authorisation bodies
                - {}  
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation" 
                - $ref: "#/components/schemas/authorisationConfirmation" 
            examples:
              "Update PSU identification (Decoupled Approach)":
                value: {}
              "Update PSU authentication (Embedded Approach)":
                $ref: "#/components/examples/updatePsuAuthenticationExample_Embedded"
              "Select PSU authentication method (Embedded Approach)":
                $ref: "#/components/examples/selectPsuAuthenticationMethodExample_Embedded"
              "Transaction authorisation (Embedded Approach)":
                $ref: "#/components/examples/transactionAuthorisationExample_Embedded"
              "Authorisation confirmation (Redirect Approach)":
                $ref: "#/components/examples/authorisationConfirmationExample_Redirect"
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"



    get:
      summary: Read the SCA status of the subscription initiation authorisation
      description: |
        This method returns the SCA status of a subscription initiation's authorisation sub-resource.
      operationId: getSubscriptionInitiationScaStatus
      tags:
        - Push Account Information Service
        - Common Services
      
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"



  /subscriptions/{push-accountinformation-subservice}/{subscriptionId}/subscription-entries:
  
    post:
      summary: Creates and adds subscription entry sub-resource to an existing subscription.
      description: | 
        Creates and adds subscription entry sub-resource to an existing subscription.
      
      operationId: addSubscriptionEntry
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Decoupled-Preferred"
        - $ref: "#/components/parameters/Client-Explicit-Authorisation-Preferred"
          #method specific header elements
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional general header parameters
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
        
      requestBody: 
        $ref: "#/components/requestBodies/addSubscriptionEntry"
        
              
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_SubscriptionEntry"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /v1/subscriptions/{push-accountinformation-subservice}/{subscriptionId}/subscription-entries/{subscriptionEntryId}:
  
    get:
      summary: read the details of a previously created subscriptionEntry
      description: | 
        This method is used to read the content of an existing subscriptionEntry resource from the ASPSP server.
      
      operationId: readSubscriptionEntryDetails
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
        
      #NO REQUEST BODY
        
              
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ReadSubscriptionEntryDetails"
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"
          
          
    delete:
      summary: Deactivates a given subscription entry resource.
      description: | 
        Deactivates a given subscription entry resource.
      
      operationId: deactivateSubscriptionEntry
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
        
      #NO REQUEST BODY
        
              
      responses:
        '204':
          $ref: "#/components/responses/OK_204_CancelSubscriptionEntry"
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /v1/subscriptions/{push-accountinformation-subservice}/{subscriptionId}/subscription-entries/{subscriptionEntryId}/status:
  
    get:
      summary: read the status of a previously created subscriptionEntry
      description: | 
        This method is used to read the status of an existing subscriptionEntry resource from the ASPSP server.
      
      operationId: readSubscriptionEntryStatus
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        
        
      #NO REQUEST BODY
        
              
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ReadSubscriptionEntryStatus"
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /subscriptions/{push-accountinformation-subservice}/{subscriptionId}/subscription-entries/{subscriptionEntryId}/authorisations:

    post: 
      summary: Start the authorisation process for the addition of a subscription entry
      description: | 
        Create an authorisation sub-resource and start the authorisation process. 
        The message might in addition transmit authentication and authorisation related data. 
        
        This method is iterated n times for a n times SCA authorisation in a 
        corporate context, each creating an own authorisation sub-endpoint for 
        the corresponding PSU authorising the transaction.
        
        The ASPSP might make the usage of this access method unnecessary in case 
        of only one SCA process needed, since the related authorisation resource 
        might be automatically created by the ASPSP after the submission of the 
        payment data with the first POST payments/{payment-product} call.
        
        The start authorisation process is a process which is needed for creating a new authorisation 
        or cancellation sub-resource. 
        
        This applies in the following scenarios:
        
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding Payment 
            initiation response that an explicit start of the authorisation process is needed by the TPP. 
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be 
            uploaded by using the extended forms:
            * 'startAuthorisationWithPsuIdentification'
            * 'startAuthorisationWithPsuAuthentication'
            * 'startAuthorisationWithEncryptedPsuAuthentication'
            * 'startAuthorisationWithAuthentciationMethodSelection'
          * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding 
            Payment cancellation response that an explicit start of the authorisation process is needed by the TPP. 
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded 
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for 
            executing the cancellation.
          * The signing basket needs to be authorised yet.
      operationId: startSubscriptionEntryAuthorisation
      tags: 
        - Push Account Information Service
        - Common Services
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Decoupled-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation" 
      
      
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"


  /subscriptions/{push-accountinformation-subservice}/{subscriptionId}/subscription-entries/{subscriptionEntryId}/authorisations/{authorisationId}:

    put: 
      summary: Update PSU data for addition of a subscription entry initiation
      description: |
        This methods updates PSU data on the authorisation resource if needed. 
        It may authorise a payment within the Embedded SCA Approach where needed.
        
        Independently from the SCA Approach it supports e.g. the selection of 
        the authentication method and a non-SCA PSU authentication.

        There are several possible update PSU data requests in the context of payment initiation services needed, 
        which depends on the SCA approach:
        
        * Redirect SCA Approach:
          A specific update PSU data request is applicable for 
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific update PSU data request is only applicable for
          * adding the PSU identification, if not provided yet in the payment initiation request or the account information consent request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach: 
          The Update PSU Data request might be used 
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorisation.
      
        The SCA Approach might depend on the chosen SCA method. 
        For that reason, the following possible Update PSU data request can apply to all SCA approaches:
        
        * Select an SCA method in case of several SCA methods are available for the customer.
      
        There are the following request types on this access path:
          * Update PSU identification
          * Update PSU authentication
          * Select PSU authorization method 
            WARNING: This method needs a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
          * Transaction authorisation
            WARNING: This method needs a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
      operationId: updateSubscriptionEntryPsuData
      tags: 
        - Push Account Information Service
        - Common Services
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content: 
          application/json:
            schema:
              oneOf: #Different authorisation bodies
                - {}  
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation" 
                - $ref: "#/components/schemas/authorisationConfirmation" 
            examples:
              "Update PSU identification (Decoupled Approach)":
                value: {}
              "Update PSU authentication (Embedded Approach)":
                $ref: "#/components/examples/updatePsuAuthenticationExample_Embedded"
              "Select PSU authentication method (Embedded Approach)":
                $ref: "#/components/examples/selectPsuAuthenticationMethodExample_Embedded"
              "Transaction authorisation (Embedded Approach)":
                $ref: "#/components/examples/transactionAuthorisationExample_Embedded"
              "Authorisation confirmation (Redirect Approach)":
                $ref: "#/components/examples/authorisationConfirmationExample_Redirect"
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"



    get:
      summary: Read the SCA status of the addition of a subscription entry authorisation
      description: |
        This method returns the SCA status of a subscription initiation's authorisation sub-resource.
      operationId: getSubscriptionEntryScaStatus
      tags:
        - Push Account Information Service
        - Common Services
      
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/subscriptionEntryId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_ASPSP"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_ASPSP"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_ASPSP"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_ASPSP"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_ASPSP"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_ASPSP"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PushAIS_ASPSP"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_ASPSP"

  /:
    servers:
      - url: <apiClientPrimaryPushURI>
        description: openFinance server of the ASPSP
      - url: <apiClientSecondaryPushURI>
        description: Optional openFinance test server
  
    post:
      summary: Push Account Information
      description: | 
        This method is used to post account information in JSON encoding to the primary URI of the API Client.
      
        Each request will create a subscription for one type of sub service. The default list of sub 
        services supported in this standard is:
          * push-account-entries
          * push-account-statements
          * push-balances
          * push-requests-to-pay
      operationId: pushAccountInformation
      tags:
        - Push Account Information Service
      
      security:
      ##################################################### 
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation, 
      # it is recommended to adjust the security schemes according to 
      # your system environments and security policies.
      #####################################################
        - {}
      #  - BearerAuthOAuth: [] does not make sense in the context of push

      parameters:
      #path
        - $ref: "#/components/parameters/pushAccountinformationSubservice"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"

      requestBody: 
        $ref: "#/components/requestBodies/pushAccountInformation"
      
      responses: 
        '204': 
          $ref: "#/components/responses/ACCEPTED_204_PushAccountInformation_Client"
        
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400_PushAIS_Client"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401_PushAIS_Client"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403_PushAIS_Client"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PushAIS_Client"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PushAIS_Client"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PushAIS_Client"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PushAIS_Client"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PushAIS_Client"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PushAIS_Client"
components:
#####################################################
# Predefined Components
#####################################################

  securitySchemes:
  #####################################################
  # Predefined Security Schemes:
  #
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to 
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation, 
  # it is recommended to adjust the security schemes according to 
  # your system environments and security policies.
  #####################################################
    BearerAuthOAuth:
      description: |
        Bearer Token. 
        
        Is contained only, if an OAuth2 based authentication was performed in a pre-step or 
        an OAuth2 based SCA was performed in a preceding AIS service in the same session.
      type: http
      scheme: bearer


  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    authorisationId:
      description: Resource identification of the related SCA.
      type: string
      example: "123auth456"


    subscriptionId:
      description: Resource identification of a subscription.
      type: string
      example: "123subs456"


    subscriptionEntryId:
      description: Resource identification of a subscription entry.
      type: string
      example: "123subsE456"


    authenticationMethodId:
      description: |
            An identification provided by the ASPSP for the later identification of the authentication method selection.
      type: string
      maxLength: 35
      example: "myAuthenticationID"


    transactionId:
      description: |
        This identification is given by the attribute transactionId of the corresponding entry of a transaction list.
      type: string
      example: "3dc3d5b3-7023-4848-9853-f5400a64e80f"


    entryReference:
      description: |
        Is the identification of the transaction as used e.g. for reference for deltafunction on application level.
        The same identification as for example used within camt.05x messages.
      type: string
      maxLength: 35


    scaStatus:
      description: |
        This data element is containing information about the status of the SCA method applied. 
        
        The following codes are defined for this data type.
        
          * 'received':
            An authorisation or cancellation-authorisation resource has been created successfully.
          * 'psuIdentified':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified.
          * 'psuAuthenticated':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.
          * 'scaMethodSelected':
            The PSU/TPP has selected the related SCA routine. 
            If the SCA method is chosen implicitly since only one SCA method is available, 
            then this is the first status to be reported instead of 'received'.
          * 'unconfirmed':
            SCA is technically successfully finalised by the PSU, but the authorisation resource needs a confirmation command by the TPP yet. 
          * 'started':
            The addressed SCA routine has been started.
          * 'finalised':
            The SCA routine has been finalised successfully (including a potential confirmation command). 
            This is a final status of the authorisation resource.
          * 'failed':
            The SCA routine failed.
            This is a final status of the authorisation resource.
          * 'exempted':
            SCA was exempted for the related transaction, the related authorisation is successful.
            This is a final status of the authorisation resource.
      type: string
      enum:
        - "received"
        - "psuIdentified"
        - "psuAuthenticated"
        - "scaMethodSelected"
        - "started"
        - "unconfirmed"
        - "finalised"
        - "failed"
        - "exempted"
        
      example: "psuAuthenticated"


    subscriptionStatus:
      description: |
        This data element is containing information about the status of a subscription. 
        
        The following codes are defined for this data type.
        
          * 'received':
            The subscription data have been received and are technically correct. The data is not authorised yet.
          * 'rejected':
            The subscription data have been rejected e.g. since no successful authorisation has taken place.
          * 'partiallyAuthorised':
            The subscription is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.
          * 'valid':
            The subscription is accepted and valid for the related subscribed services as specified in the subscription object.
          * 'validInChange':
            The subscription is accepted and valid for the related subscribed services as specified in the subscription object. A new subscription entry has been
            submitted which is not yet (fully) authorised.
          * 'revokedByPsu':
            The subscription has been revoked by the PSU towards the ASPSP.
          * 'cancelledByAspsp':
            The subscription has been cancelled by the ASPSP.
          * 'expired':
            The subscription expired.
          * 'terminatedByTpp':
            The corresponding TPP has terminated the subscription by applying the DELETE method to the subscription resource.
      type: string
      enum:
        - "received"
        - "rejected"
        - "partiallyAuthorised"
        - "valid"
        - "validInChange"
        - "revokedByPsu"
        - "cancelledByAspsp"
        - "expired"
        - "terminatedByTpp"
      example: "validInChange"


    subscriptionEntryStatus:
      description: |
        This data element is containing information about the status of the subscription entry. 
        
        The following codes are defined for this data type.
        
          * 'received':
            The subscription data have been received and are technically correct. The data is not authorised yet.
          * 'rejected':
            The subscription data have been rejected e.g. since no successful authorisation has taken place.
          * 'partiallyAuthorised':
            The subscription is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.
          * 'valid':
            The subscription is accepted and valid for the related subscribed services as specified in the subscription object.
          * 'revokedByPsu':
            The subscription has been revoked by the PSU towards the ASPSP.
          * 'cancelledByAspsp':
            The subscription has been cancelled by the ASPSP.
          * 'expired':
            The subscription expired.
          * 'terminatedByTpp':
            The corresponding TPP has terminated the subscription by applying the DELETE method to the subscription resource.
      type: string
      enum:
        - "received"
        - "rejected"
        - "partiallyAuthorised"
        - "valid"
        - "revokedByPsu"
        - "cancelledByAspsp"
        - "expired"
        - "terminatedByTpp"
      example: "validInChange"


    scaStatusAuthorisationConfirmation:
      description: |
        This data element is containing information about the status of the SCA method in an authorisation confirmation response. 
        
        The following codes are defined for this data type.
        
          * 'finalised': if the transaction authorisation and confirmation was successful.
          * 'failed': if the transaction authorisation or confirmation was not successful.
      type: string
      enum:
        - "finalised"
        - "failed"


    scaAuthenticationData:
      description: |
        SCA authentication data, depending on the chosen authentication method. 
        If the data is binary, then it is base64 encoded.
      type: string


    scaMethods:
      description: |
        This data element might be contained, if SCA is required and if the PSU has a choice between different
        authentication methods.
        
        Depending on the risk management of the ASPSP this choice might be offered before or after the PSU
        has been identified with the first relevant factor, or if an access token is transported.
        
        If this data element is contained, then there is also a hyperlink of type 'startAuthorisationWithAuthenticationMethodSelection'
        contained in the response body.
        
        These methods shall be presented towards the PSU for selection by the TPP.
      type: array
      items:
        $ref: "#/components/schemas/authenticationObject"


    chosenScaMethod:
      # description: |
      #  This data element is only contained in the response if the ASPSP has chosen the Embedded SCA Approach,
      #  if the PSU is already identified e.g. with the first relevant factor or alternatively an access token,
      #  if SCA is required and if the authentication method is implicitly selected.
      $ref: "#/components/schemas/authenticationObject"


    authenticationType:
      description: |
        Type of the authentication method.
        
        More authentication types might be added during implementation projects and documented in the ASPSP documentation.
        
          - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.
          - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. a TOP derived from an EMV cryptogram. 
            To contact the card, the PSU normally needs a (handheld) device. 
            With this device, the PSU either reads the challenging data through a visual interface like flickering or 
            the PSU types in the challenge through the device key pad. 
            The device then derives an OTP from the challenge data and displays the OTP to the PSU.
          - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data 
            which can be read in by a consumer device or specific mobile app. 
            The device resp. the specific app than derives an OTP from the visual challenge data and displays 
            the OTP to the PSU.
          - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.
          - 'SMTP_OTP': An OTP is sent via email to the PSU.
      type: string
      enum:
        - "SMS_OTP"
        - "CHIP_OTP"
        - "PHOTO_OTP"
        - "PUSH_OTP"
        - "SMTP_OTP"


    authenticationObject:
      description: |
        Authentication object.
      type: object
      required:
        - authenticationType
        - authenticationMethodId
      properties:
        authenticationType:
          $ref: "#/components/schemas/authenticationType"
        authenticationVersion:
          description: |
            Depending on the "authenticationType".
            This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type.
            This version can be referred to in the ASPSP?s documentation.
          type: string
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"
        name:
          description: |
            This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP.
            Alternatively this could be a description provided by the ASPSP like "SMS OTP on phone +49160 xxxxx 28".
            This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.
          type: string
          example: "SMS OTP on phone +49160 xxxxx 28"
        explanation:
          description: |
            Detailed information about the SCA method for the PSU.
          type: string
          example: Detailed information about the SCA method for the PSU.


    challengeData:
      description: |
        It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA.
        In rare cases this attribute is also used in the context of the 'startAuthorisationWithPsuAuthentication' link.
      type: object
      properties:
        image:
          type: string
          format: byte
          description: |
            PNG data (max. 512 kilobyte) to be displayed to the PSU,
            Base64 encoding, cp. [RFC4648].
            This attribute is used only, when PHOTO_OTP or CHIP_OTP
            is the selected SCA method.
        data:
          type: array
          items:
            type: string
          description: A collection of strings as challenge data.
        imageLink:
          type: string
          format: url
          description: A link where the ASPSP will provides the challenge image for the TPP.
        otpMaxLength:
          type: integer
          description: The maximal length for the OTP to be typed in by the PSU.
        otpFormat:
          type: string
          description: The format type of the OTP to be typed in. The admitted values are "characters" or "integer".
          enum:
            - "characters"
            - "integer"
        additionalInformation:
          type: string
          description: |
            Additional explanation for the PSU to explain
            e.g. fallback mechanism for the chosen SCA method.
            The TPP is obliged to show this to the PSU.


    hrefType:
      description: Link to a resource.
      type: object
      properties:
        href:
          $ref: "#/components/schemas/hrefEntry"

    hrefEntry:
      description: Link to a resource.
      type: string
      example: "/v1/payments/sepa-credit-transfers/1234-wertiq-983"


    accountReference:
      description: | 
        Reference to an account by either
          * IBAN, of a payment accounts, or
          * BBAN, for payment accounts if there is no IBAN, or 
          * the Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements, or
          * the Primary Account Number (PAN) of a card in a masked form, or
          * an alias to access a payment account via a registered mobile phone number (MSISDN), or
          * a proprietary ID of the  respective account that uniquely identifies the account for this ASPSP.
      type: object
      properties:
        iban: 
          $ref: "#/components/schemas/iban"
        bban: 
          $ref: "#/components/schemas/bban"
        pan: 
          $ref: "#/components/schemas/pan"
        maskedPan: 
          $ref: "#/components/schemas/maskedPan"
        msisdn: 
          $ref: "#/components/schemas/msisdn"
        other:
          $ref: "#/components/schemas/otherType"
        currency:
          $ref: "#/components/schemas/currencyCode"
        cashAccountType:
          $ref: "#/components/schemas/cashAccountType"


    arrayOfPushAccountEntrySubscriptionEntries:
      type: array
      items: 
        $ref: "#/components/schemas/pushAccountEntrySubscriptionEntry"


    arrayOfPushAccountStatementSubscriptionEntries:
      type: array
      items: 
        $ref: "#/components/schemas/pushAccountStatementSubscriptionEntry"


    arrayOfPushBalanceInformationSubscriptionEntries:
      type: array
      items: 
        $ref: "#/components/schemas/pushBalanceInformationSubscriptionEntry"


    arrayOfPushRTPSubscriptionEntries:
      type: array
      items: 
        $ref: "#/components/schemas/pushRTPSubscriptionEntry"


    otherType:
      description: In cases where the specifically defined criteria (IBAN, BBAN, MSISDN)
        are not provided to identify an instance of the respective account type (e.g. a savings account), 
        the ASPSP shall include a proprietary ID of the respective account that uniquely identifies the account for this ASPSP.
      type: object
      required: 
        - identification
      properties:
        identification:
          description: Proprietary identification of the account.
          type: string
          maxLength: 35
        schemeNameCode:
          description: An entry provided by an external ISO code list. 
          type: string
          maxLength: 35
        schemeNameProprietary:
          description: A scheme name defined in a proprietary way.
          type: string
          maxLength: 35
        issuer:
          description: Issuer of the identification.
          type: string
          maxLength: 35


    balanceType:
      description: |
        The following balance types are defined:
          - "closingBooked": 
            Balance of the account at the end of the pre-agreed account reporting period. 
            It is the sum of the opening booked balance at the beginning of the period and all entries booked 
            to the account during the pre-agreed account reporting period.
            
            For card-accounts, this is composed of
            
              - invoiced, but not yet paid entries
            
          - "expected":
            Balance composed of booked entries and pending items known at the time of calculation, 
            which projects the end of day balance if everything is booked on the account and no other entry is posted.
            
            For card accounts, this is composed of:
              - invoiced, but not yet paid entries
              - not yet invoiced but already booked entries and
              - pending items (not yet booked)
            
            For card-accounts:
            
            "money to spend with the value of a pre-approved credit limit on the card account"
            
          - "openingBooked":
            Book balance of the account at the beginning of the account reporting period. 
            It always equals the closing book balance from the previous report.
          - "interimAvailable":
            Available balance calculated in the course of the account ?servicer?s business day, 
            at the time specified, and subject to further changes during the business day. 
            The interim balance is calculated on the basis of booked credit and debit items during the calculation 
            time/period specified.
            
            For card-accounts, this is composed of:
              - invoiced, but not yet paid entries
              - not yet invoiced but already booked entries
          - "interimBooked":
            Balance calculated in the course of the account servicer's business day, at the time specified, 
            and subject to further changes during the business day. 
            The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period 
            specified.
          - "forwardAvailable":
            Forward available balance of money that is at the disposal of the account owner on the date specified.
          - "nonInvoiced": 
            Only for card accounts, to be checked yet. 
      type: string
      enum:
          - "closingBooked"
          - "expected"
          - "openingBooked"
          - "interimAvailable"
          - "interimBooked"
          - "forwardAvailable"
          - "nonInvoiced"


    cashAccountType:
      description: |
        ExternalCashAccountType1Code from ISO 20022.
      type: string
#      enum:
#        - "CACC"
#        - "CARD"
#        - "CASH"
#        - "CHAR"
#        - "CISH"
#        - "COMM"
#        - "CPAC"
#        - "LLSV"
#        - "LOAN"
#        - "MGLD"
#        - "MOMA"
#        - "NREX"
#        - "ODFT"
#        - "ONDP"
#        - "OTHR"
#        - "SACC"
#        - "SLRY"
#        - "SVGS"
#        - "TAXE"
#        - "TRAN"
#        - "TRAS"


    commonSubscriptionEntryProperties:
      description: |
        Common properties that are valid for all types of subscription entries.
      type: object
      required:
        - accountId
        - apiClientPrimaryPushURI
      properties:
        accountId:
          $ref: "#/components/schemas/accountReference"
        validUntil:
          allOf:
            - description: Requested validity date of the service.
            - $ref: "#/components/schemas/ISODate"
        subscriptionEntryName:
          $ref: "#/components/schemas/Max35Text"
        subscriptionEntryId:
          description: Forbidden in an Initiate Subscription Request and in an Add a Subscription Entry Request by the TPP (as this is assigned by the ASPSP).
            Mandatory in each entry of a response from an ASPSP.
          type: string
        apiClientPrimaryPushURI:
          $ref: "#/components/schemas/Max256Text"
        apiClientSecondaryPushURI:
          $ref: "#/components/schemas/Max256Text"
        callbackWithLinkPrefered:
          description: API Client prefers to receive hyperlinks pointing to the related account information element if the related subservice criteria are met.
          type: boolean
        callbackWithStaticTextPrefered:
          description: API Client prefers to get informed by static text if the related subservice criteria are met.
          type: boolean
        staticCallbackText:
          $ref: "#/components/schemas/Max140Text"


    pushAccountEntrySubscriptionEntry:
      allOf:
        - $ref: "#/components/schemas/commonSubscriptionEntryProperties"
        - type: object
          required:
          - pushAccountEntryParameters
          properties:
            pushAccountEntryParameters:
              $ref: "#/components/schemas/pushAccountEntryParameters"


    pushAccountStatementSubscriptionEntry:
      allOf:
        - $ref: "#/components/schemas/commonSubscriptionEntryProperties"
        - type: object
          required:
          - pushAccountStatementParameters
          properties:
            pushAccountStatementParameters:
              $ref: "#/components/schemas/pushAccountStatementParameters"


    pushBalanceInformationSubscriptionEntry:
      allOf:
        - $ref: "#/components/schemas/commonSubscriptionEntryProperties"
        - type: object
          required:
          - pushBalanceParameters
          properties:
            pushBalanceParameters:
              $ref: "#/components/schemas/pushBalanceParameters"


    pushRTPSubscriptionEntry:
      allOf:
        - $ref: "#/components/schemas/commonSubscriptionEntryProperties"
        - type: object
          required:
          - pushRtpParameters
          properties:
            pushRtpParameters:
              $ref: "#/components/schemas/pushRtpParameters"


    pushAccountEntryParameters:
      description: |
        Parameters for a subscription entry for the Push Account Entry Service.
      type: object
      required:
        - acceptedFormat
      properties:
        accountEntryCriteria:
          $ref: "#/components/schemas/accountEntryTriggerCriteria"
        acceptedFormat:
          allOf:
            - description: This is defining the mime type. If the requested mime type is not supported by the ASPSP, the request is rejected.
                If not used, then the ASPSP is choosing the mime type.
                
                At a minimum the ASPSP shall support a JSON mime type.
            - $ref: "#/components/schemas/mimeTypeCode"
        preferredAttributes:
          description: These attributes are the preferred ones for every account entry to be pushed. The ASPSP might ignore this preference. 
              Only attributes of the first level of Type Transactions as defined in [XS2A-IG] might be used.
          type: array
          items: 
            $ref: "#/components/schemas/Max35Text"
        documentsPreferred:
          description: "RFU: This data element indicates that the API Client prefers to also receive documents attached to an account entry. This data attribute
              might be ignored by the ASPSP."
          type: boolean


    pushAccountStatementParameters:
      description: |
        Parameters for a subscription entry for the Push Account Statement Service.
      type: object
      required:
        - accountStatementCriteria
      properties:
        accountStatementCriteria:
          $ref: "#/components/schemas/accountStatementTriggerCriteria"


    pushBalanceParameters:
      description: |
        Parameters for a subscription entry for the Push Balance Service.
      type: object
      required:
        - balanceCriteria
      properties:
        balanceCriteria:
          $ref: "#/components/schemas/balanceTriggerCriteria"


    pushRtpParameters:
      description: |
        Parameters for a subscription entry for the Push RTP Service.
      type: object
      required:
        - acceptedFormat
      properties:
        rtpCriteria:
          $ref: "#/components/schemas/rtpTriggerCriteria"
        acceptedFormat:
          allOf:
            - description: This is defining the mime type. If the requested mime type is not supported by the ASPSP, the request is rejected.
                If not used, then the ASPSP is choosing the mime type.
                
                At a minimum the ASPSP shall support a JSON mime type.
            - $ref: "#/components/schemas/mimeTypeCode"
        documentsPreferred:
          description: "RFU: This data element indicates that the API Client prefers to also receive documents attached to an account entry. This data attribute
              might be ignored by the ASPSP."
          type: boolean


    pushAccountEntries_json:
      description: "Content of a JSON body of a request from the Push Account Entries Service."
      type: object
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        debitAccounting:
          description: "If true, the amounts of debits on the reports are quoted positive with the related consequence
              for balances.
              If false, the amount of debits on the reports are quoted negative."
          type: boolean
        dateTimeLastPush:
          $ref: "#/components/schemas/ISODateTime"
        staticCallbackText:
          $ref: "#/components/schemas/Max140Text"
        _links:
          $ref: "#/components/schemas/_linksGeneric"
        transactions:
          $ref: "#/components/schemas/leanAccountReport"


    pushAccountStatement_json:
      description: "This is not defined, yet.
          RFU: A format of a JSON based account statement might be defined in future."


    pushBalanceInformation_json:
      description: "Content of a JSON body of a request from the Push Balances Service."
      type: object
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        balance:
          $ref: "#/components/schemas/balance"
        dateTimeLastPush:
          $ref: "#/components/schemas/ISODateTime"
        staticCallbackText:
          $ref: "#/components/schemas/Max140Text"
        _links:
          $ref: "#/components/schemas/_linksGeneric"
    
    
    pushRTP_json:
      description: "Content of a JSON body of a request from the Push RTP Service."
      type: object
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        dateTimeLastPush:
          $ref: "#/components/schemas/ISODateTime"
        staticCallbackText:
          $ref: "#/components/schemas/Max140Text"
        _links:
          $ref: "#/components/schemas/_linksGeneric"
        transactions:
          $ref: "#/components/schemas/leanAccountReport"


    Max16Text:
      type: string
      maxLength: 16
          
          
    Max35Text:
      type: string
      maxLength: 35


    Max70Text:
      type: string
      maxLength: 70

  
    Max140Text:
      type: string
      maxLength: 140

  
    Max256Text:
      type: string
      maxLength: 256


    ISODate:
      type: string
      format: date

    ISODateTime:
      type: string
      format: date-time


    CountryCode:
      type: string
      maxLength: 4


    accountEntryTriggerCriteria:
      description: "This attribute is defining the account entries to be pushed to the API Client push URI: All entries
          which are fulfilling all the criteria listed in this attribute will be pushed.
          
          If the attribute is not provided, all account entries will be pushed."
      type: object
      properties:
        bankTransactionCodePatterns:
          description: "The criterion is fulfilled if the bankTransactionCode of the related account entry matches one of the bank transaction codes or
              code patterns (see the following paragraph) defined by this list. Any particle of the Bank Transaction Code triple might be replaced by 
              the \"????\" character, indicating that all sub family codes apply. However, at least one particle of the triple must be stated explicitly 
              (e.g. \"????-CCRD-????\")."
          type: array
          items:
            $ref: "#/components/schemas/bankTransactionCodePattern"
        proprietaryBankCodes:
          description: The criterion is fulfilled if the proprietaryBankTransactionCode of the related account entry equals one of the proprietary bank
              transaction codes defined by this list.
          type: array
          items:
            $ref: "#/components/schemas/Max35Text"
        accountEntryStatus:
          allOf:
            - description: "The criterion is fulfilled if the account entry has the related status booked or pending respectively.
                
                Note: Entries might be pushed twice in case where this criterion is not provided if the transactionStatus is changed from
                pending to booked in the account system."
            - $ref: "#/components/schemas/accountEntryStatus"
        maximumAmount:
          allOf:
            - description: The criterion is fulfilled if the (absolute value of the) transactionAmount of the related account entry is provided in the
                same currency and if the transactionAmount is less or equal to the amount provided in this attribute.
            - $ref: "#/components/schemas/amount"
        minimumAmount:
          allOf:
            - description: The criterion is fulfilled if the (absolute value of the) transactionAmount of the related account entry is provided in the
                same currency and if the transactionAmount is greater or equal to the amount provided in this attribute.
            - $ref: "#/components/schemas/amount"
        debtorAccount:
          allOf:
            - description: "The criterion is fulfilled if the counterparty account of the related account entry is a debtor account and equals the account defined in
                this attribute."
            - $ref: "#/components/schemas/accountReference"
        creditorAccount:
          allOf:
            - description: "The criterion is fulfilled if the counterparty account of the related account entry is a creditor account and equals the account defined in
                this attribute."
            - $ref: "#/components/schemas/accountReference"
        creditDebitIndicator:
          allOf:
            - description: "The criterion is fulfilled if the related account entry is a credit as defined in this attribute, or a debit respectively."
            - $ref: "#/components/schemas/creditDebitCode"
        purpose:
          allOf:
            - description: "The criterion is fulfilled if the related account entry has a purpose code equal to the code provided in this attribute."
            - $ref: "#/components/schemas/purposeCode"
        remittanceinformationUnstructured:
          allOf:
            - description: "The criterion is fulfilled if the related account entry has an unstructured remittance information where the string provided in this 
                attribute is contained as a substring."
            - $ref: "#/components/schemas/Max140Text"


    accountStatementTriggerCriteria:
      description: "This attribute is defining the account statements to be pushed to the API Client push URI:
          Every time, the criteria listed in this attribute are all fulfilled, the current account statement 
          of the related account is pushed."
      type: object
      allOf:
        - oneOf:
            - type: object
              properties:
                reports:
                  allOf:
                    - description: "One of the values \"MT942\", \"camt.052\", shall be used. The
                        criterion is fulfilled if a related report is available.
                        
                        If the related report format is not supported, then the ASPSP is rejecting the 
                        subscription with a dedicated error code."
                    - $ref: "#/components/schemas/accountReportTypes"
            - type: object
              properties:
                statements:
                  allOf:
                    - description: "One of the values \"MT940\", \"camt.053\", shall be used. The
                        criterion is fulfilled if a related report is available.
                        
                        If the related report format is not supported, then the ASPSP is rejecting the 
                        subscription with a dedicated error code."
                    - $ref: "#/components/schemas/accountStatementTypes"
        - type: object
          properties:
            event:
              description: "Only the value \"afterGeneration\" may be used. The criterion is fulfilled if 
                      the related report is generated and made available to the PSU in the online channel."
              type: string
              enum:
                - "afterGeneration"
            times:
              allOf:
                - description: "The value is provided in format \"hh:mm:ss\". The criterion is fulfilled if the current local ASPSP time is
                    matching one of the defined times in the list of times. The list shall not be empty."
                - type: array
                  items: 
                    $ref: "#/components/schemas/time_hh_mm_ss"


    balanceTriggerCriteria:
      description: "This attribute is defining the balance information to be pushed to the API Client push URI: Every
          time, a balance is fulfilling all the criteria listed in this attribute it is pushed."
      type: object
      properties:
        balanceAmount:
          allOf:
            - description: "The criterion is fulfilled if the current balance of type balanceType provided below fulfills
                the balanceOperator requirement provided below together with the provided balanceAmount in this attribute 
                and where the last provided balance did not fulfill it."
            - $ref: "#/components/schemas/amount"
        balanceOperator:
          description: "Must be one of the folowing codes:
              * less,
              * lessOrEqual,
              * equal,
              * greaterOrEqual,
              * greater"
          type: string
          enum:
            - "less"
            - "lessOrEqual"
            - "equal"
            - "greaterOrEqual"
            - "greater"
        balanceType:
          allOf:
            - description: "This criterion is fulfilled if the balance is of this type. If the related balance type is not
                supported for the addressed account, then the ASPSP is rejecting the subscription with a dedicated error code."
            - $ref: "#/components/schemas/balanceType"
        creditLimitIncluded:
          description: "This criterion is fulfilled if the related current balance is provided with the credit limit included (if this
              attribute is true) or not (if this attribute is false). If the attribute is true and if the related balance type defined above
              is not applicable to the condition whether a credit limit is included then the subscription is rejected with a dedicated error code."
          type: boolean
        times:
          allOf:
            - description: "The value is provided in format \"hh:mm:ss\". The criterion is fulfilled if the current local ASPSP time is
                matching one of the defined times in the list of times. The list shall not be empty."
            - type: array
              items: 
                $ref: "#/components/schemas/time_hh_mm_ss"


    rtpTriggerCriteria:
      description: "This attribute is defining the incoming RTP requests to be pushed to the API Client push URI:
          All RTPs which are fulfilling all the criteria listed in this attribute will be pushed.
          If the attribute is not provided, all RTPs will be pushed as soon as they are arriving at the ASPSP's
          system."
      type: object
      properties:
        event:
          description: "\"afterReception\" is the only supported value."
          type: string
          enum:
            - "afterReception"
        timeToExpire:
          description: "Only forward incoming RTP with an expiry timestamp within that period, where the period is defined
              by the number of minutes as provided in this attribute. This criterion is meant to forward only short term RTPs."
          type: integer
        expiryReminder:
          description: "This criterion is fulfilled if a long term RTP is still not confirmed 2 days before the RTP expires."
          type: boolean


    time_hh_mm_ss:
      type: string
      pattern: (([0-1][0-9])|(2[0-4])):[0-5][0-9]:[0-5][0-9]


    accountReportTypes:
      type: string
      enum:
        - "MT942"
        - "camt.052"


    accountStatementTypes:
      type: string
      enum:
        - "MT940"
        - "camt.053"

    accountEntryStatus:
      type: string
      enum:
        - booked
        - pending
        
    creditDebitCode:
      type: string
      enum:
        - CRDT
        - DBIT

    mimeTypeCode:
      type: string
      enum:
        - application/JSON
        - application/XML
        - plain/text


    bankTransactionCode: 
      description: |
        Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022. 
        
        This code type is concatenating the three ISO20022 Codes 
          * Domain Code, 
          * Family Code, and 
          * SubFamily Code 
        by hyphens, resulting in 'DomainCode'-'FamilyCode'-'SubFamilyCode'.
        For standing order reports the following codes are applicable:
          * "PMNT-ICDT-STDO" for credit transfers,
          * "PMNT-IRCT-STDO"  for instant credit transfers
          * "PMNT-ICDT-XBST" for cross-border credit transfers
          * "PMNT-IRCT-XBST" for cross-border real time credit transfers and
          * "PMNT-MCOP-OTHR" for specific standing orders which have a dynamical amount to move left funds e.g. on month end to a saving account
        
      type: string
      pattern: ([A-Z]{4}-[A-Z]{4}-[A-Z]{4})
      example: "PMNT-RDDT-ESDD"


    bankTransactionCodePattern:
        description: A bank transaction codes consists of three blocks of four letter codes (Domain Code, Family Code, Subfamily Code), seperated by a - character.
            Up to two code blocks may be replaced with the wildcards ????.
        type: string
        pattern: ((([A-Z]{4}|\?\?\?\?)-([A-Z]{4}|\?\?\?\?)-([A-Z]{4}))|(([A-Z]{4}|\?\?\?\?)-([A-Z]{4})-([A-Z]{4}|\?\?\?\?))|(([A-Z]{4})-([A-Z]{4}|\?\?\?\?)-([A-Z]{4}|\?\?\?\?)))


    leanAccountReport:
      description: |
        JSON based account report.
        This account report contains transactions resulting from the query parameters.
        
        "booked" shall be contained if bookingStatus parameter is set to "booked" or "both".
          
        "pending" is not contained if the bookingStatus parameter is set to "booked" or "information".

        "information" Only contained if the bookingStatus is set to "information" and if supported by ASPSP.
      type: object
      properties:
        booked:
          $ref: "#/components/schemas/transactionList"
        pending:
          $ref: "#/components/schemas/transactionList"
        information:
          $ref: "#/components/schemas/transactionList"

    transactionList:
      description: Array of transaction details.
      type: array
      items: 
        $ref: "#/components/schemas/transactions"


    transactions:
      description: Transaction details.
      type: object
      required:
        - transactionAmount
      properties:
        transactionId:
          $ref: "#/components/schemas/transactionId"
        entryReference:
          $ref: "#/components/schemas/entryReference"
        endToEndId:
          description: Unique end to end identity.
          type: string
          maxLength: 35
        batchIndicator:
          description: |
            If this indicator equals true, then the related entry is a batch entry.
          type: boolean
        batchNumberOfTransactions:
          description: |
            Shall be used if and only if the batchIndicator is contained and equals true.
          type: integer
        mandateId:
          description: Identification of Mandates, e.g. a SEPA Mandate ID.
          type: string
          maxLength: 35
        checkId:
          description: Identification of a Cheque.
          type: string
          maxLength: 35
        creditorId:
          $ref: "#/components/schemas/creditorId"
        bookingDate:
          $ref: "#/components/schemas/bookingDate"
        valueDate:
          description: The Date at which assets become available to the account owner in case of a credit, or cease to be available to the account owner in case of a debit entry.
            **Usage:** If entry status is pending and value date is present, then the value date refers to an expected/requested value date.
          type: string
          format: date
        transactionAmount:
          $ref: "#/components/schemas/amount"
        currencyExchange:
          $ref: "#/components/schemas/reportExchangeRateList"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAdditionalInformation:
          $ref: "#/components/schemas/additionalPartyInformation"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        ultimateCreditor:
          $ref: "#/components/schemas/ultimateCreditor"
        ultimateCreditorAdditionalInformation:
          $ref: "#/components/schemas/additionalPartyInformation"
        debtorName:
          $ref: "#/components/schemas/debtorName"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/bicfi"
        ultimateDebtor:
          $ref: "#/components/schemas/ultimateDebtor"
        remittanceInformationUnstructured: 
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        remittanceInformationUnstructuredArray: 
          $ref: "#/components/schemas/remittanceInformationUnstructuredArray"
        remittanceInformationStructured:
          $ref: "#/components/schemas/remittanceInformationStructuredMax140"
        remittanceInformationStructuredArray:
          $ref: "#/components/schemas/remittanceInformationStructuredArray"
        entryDetails:
          $ref: "#/components/schemas/entryDetails"
        additionalInformation:
          $ref: "#/components/schemas/additionalInformation"
        additionalInformationStructured:
          $ref: "#/components/schemas/additionalInformationStructured"
        purposeCode:
          $ref: "#/components/schemas/purposeCode"
        bankTransactionCode:
          $ref: "#/components/schemas/bankTransactionCode"
        proprietaryBankTransactionCode:
          $ref: "#/components/schemas/proprietaryBankTransactionCode"
        balanceAfterTransaction: 
          $ref: "#/components/schemas/balance"
        _links:
          $ref: "#/components/schemas/_linksTransactionDetails"


    additionalPartyInformation:
      type: object
      properties:
        tradeName:
          allOf:
            - description: 'Trade name of the related party. For display to the PSU only.'
            - $ref: '#/components/schemas/Max70Text'
        merchantCategoryCode:
          allOf:
            - $ref: '#/components/schemas/merchantCategoryCode'
            - description: 'Merchant Category Code as assigned by ISO'
        merchantLogo:
          type: string
          description: 'Base 64 coded graphic. Reserved for future extensions.'
      example:
        tradeName: "railway travel system"
        merchantCategoryCode: "4112"


    reportExchangeRateList:
      description: Array of exchange rates.
      type: array
      items: 
        $ref: "#/components/schemas/reportExchangeRate"


    reportExchangeRate:
      description: Exchange Rate.
      type: object
      required:
        - sourceCurrency
        - exchangeRate
        - unitCurrency
        - targetCurrency
        - quotationDate
      properties:
        sourceCurrency:
          $ref: "#/components/schemas/currencyCode"
        exchangeRate:
          type: string
        unitCurrency:
          $ref: "#/components/schemas/currencyCode"
        targetCurrency:
          $ref: "#/components/schemas/currencyCode"
        quotationDate:
          type: string
          format: date
        contractIdentification:
          type: string
          maxLength: 35


    balance:
      description: |
        A single balance element.
      type:
        object
      required:
        - balanceAmount
        - balanceType
      properties:
        balanceAmount:
          $ref: "#/components/schemas/amount"
        balanceType:
          $ref: "#/components/schemas/balanceType"
        creditLimitIncluded:
          description: |
            A flag indicating if the credit limit of the corresponding account 
            is included in the calculation of the balance, where applicable.
          type: boolean
          example: false
        lastChangeDateTime:
          description: |
            This data element might be used to indicate e.g. with the expected or booked balance that no action is known 
            on the account, which is not yet booked.
          type: string
          format: date-time
        referenceDate:
          description: Indicates the date of the balance.
          type: string
          format: date
        lastCommittedTransaction:
          description: |
            "entryReference" of the last committed transaction to support the TPP in identifying whether all 
            PSU transactions are already known.
          type: string
          maxLength: 35


    bicfi: 
      description: |
        BICFI
      type: string
      pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'
      example: "AAAADEBBXXX"


    pan:
      description: |
        Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      #According to ISO the following should be valid.
      #maxLength: 19
      #minLength: 8
      #pattern: "[0-9]{8,19}"
      example: "5409050000000000"


    maskedPan:
      description: |
        Masked Primary Account Number.
      type: string
      maxLength: 35
      example: "123456xxxxxx1234"


    bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier.
        
        This data element can be used in the body of the consent request.
          Message for retrieving account access consent from this account. This
          data elements is used for payment accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN). 
          
          Identifier used nationally by financial institutions, i.e., in individual countries, 
          generally as part of a National Account Numbering Scheme(s), 
          which uniquely identifies the account of a customer.
      type: string
      pattern: "[a-zA-Z0-9]{1,30}" 
      example: "BARC12345612345678"


    msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: "+49 170 1234567"


    iban:
      type: string
      description: IBAN of an account.
      pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      example: "FR7612345987650123456789014"


    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          $ref: "#/components/schemas/amountValue"
      example: 
        {
          "currency": "EUR", 
          "amount": "123"
        }


    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code.
      type: string
      pattern: '[A-Z]{3}'
      example: "EUR"


    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.
        
        **Example:**
        Valid representations for EUR with up to two decimals are:
        
          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"


    remittanceInformationStructuredMax140: 
      description: |
        Structured remittance information Max
      type: string
      maxLength: 140


    remittanceInformationStructured: 
      description: |
        Structured remittance information.
      type: object
      required:
        - reference
      properties:
        reference:
          type: string
          maxLength: 35
        referenceType:
          type: string
          maxLength: 35
        referenceIssuer:
          type: string
          maxLength: 35


    remittanceInformationStructuredArray:
      description: |
        Array of structured remittance information.
      type: array
      items:
        $ref: "#/components/schemas/remittanceInformationStructured"


    remittanceInformationUnstructured:
      description: |
        Unstructured remittance information.
      type: string
      maxLength: 140
      example: "Ref Number Merchant"

    remittanceInformationUnstructuredArray:
      description: |
        Array of unstructured remittance information.
      type: array
      items:
        $ref: "#/components/schemas/remittanceInformationUnstructured"
      example: ["Ref Number Merchant", "Some Other Text"]


    entryDetailsElement:
      type: object
      required:
        - transactionAmount
      properties:
        endToEndId:
          description: Unique end to end identity.
          type: string
          maxLength: 35
        mandateId:
          description: Identification of Mandates, e.g. a SEPA Mandate ID.
          type: string
          maxLength: 35
        checkId:
          description: Identification of a Cheque.
          type: string
          maxLength: 35
        creditorId:
          $ref: "#/components/schemas/creditorId"
        transactionAmount:
           $ref: "#/components/schemas/amount"
        currencyExchange:
          $ref: "#/components/schemas/reportExchangeRateList"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        ultimateCreditor:
          $ref: "#/components/schemas/ultimateCreditor"
        debtorName:
          $ref: "#/components/schemas/debtorName"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/bicfi"
        ultimateDebtor:
          $ref: "#/components/schemas/ultimateDebtor"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        remittanceInformationUnstructuredArray:
          $ref: "#/components/schemas/remittanceInformationUnstructuredArray"
        remittanceInformationStructured:
          $ref: "#/components/schemas/remittanceInformationStructured"
        remittanceInformationStructuredArray:
          $ref: "#/components/schemas/remittanceInformationStructuredArray"
        purposeCode:
          $ref: "#/components/schemas/purposeCode"


    entryDetails:
      description: |
        Might be used by the ASPSP to transport details about transactions within a batch.
      type: array
      items:
        $ref: "#/components/schemas/entryDetailsElement"
        


    additionalInformation:
      description: |
        Might be used by the ASPSP to transport additional transaction related information to the PSU
      type: string
      maxLength: 500
      example: "Some additional transaction related information."


    additionalInformationStructured:
      oneOf:
        - $ref: "#/components/schemas/additionalInformationStructuredStandingOrders"
        - $ref: "#/components/schemas/additionalInformationStructuredRequestToPay"


    additionalInformationStructuredStandingOrders:
      description: |
        Is used if and only if the bookingStatus entry equals "information". 
        Every active standing order related to the dedicated payment account result into one entry.
      type: object
      required:
        - standingOrderDetails
      properties:
        standingOrderDetails:
          $ref: "#/components/schemas/standingOrderDetails"


    standingOrderDetails:
      description: |
        Details of underlying standing orders.
      type: object
      required:
        - startDate
        - frequency
      properties:
        startDate:
          $ref: "#/components/schemas/startDate"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        withinAMonthFlag:
          description: |
            This element is only used in case of frequency equals "Monthly".
            
            If this element equals false it has no effect.
            If this element equals true, then the execution rule is overruled if the day of execution would fall into a different month using the execution rule.
            
            Example: executionRule equals "preceding", dayOfExecution equals "02" and the second of a month is a Sunday. 
            In this case, the transaction date would be on the last day of the month before.
             This would be overruled if withinAMonthFlag equals true and the payment is processed on Monday the third of the Month.
            Remark: This attribute is rarely supported in the market.
          type: boolean
        monthsOfExecution:
          $ref: "#/components/schemas/monthsOfExecution"
        multiplicator:
          description: |
            This is multiplying the given frequency resulting the exact frequency,
            e.g. Frequency=weekly and multiplicator=3 means every 3 weeks.
            Remark: This attribute is rarely supported in the market.
          type: integer
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        limitAmount:
          $ref: "#/components/schemas/amount"


    additionalInformationStructuredRequestToPay:
      description: |
        Additional information for a request to pay.
      type: object
      required:
        - requestedExpiryDateTime
      properties:
        paymentConditions:
          $ref: "#/components/schemas/paymentConditions"
        creationDateTime:
          $ref: "#/components/schemas/ISODateTime"
        requestedExpiryDateTime:
          $ref: "#/components/schemas/ISODateTime"
        originatorPspId:
          $ref: "#/components/schemas/financialInstitutionIdentification"


    paymentConditions:
      type: object
      properties:
        amountModificationAllowed:
          description: 'Indicates if the debtor is allowed to pay a different amount then the requested amount.'
          type: boolean
        earlyPaymentAllowed:
          description: 'Indicates if the debtor is allowed to pay before the requested execution date.'
          type: boolean


    financialInstitutionIdentification:
      type: object
      properties:
        bicfi:
          allOf:
            - $ref: '#/components/schemas/bicfi'
            - description: 'Code allocated to a financial institution.'
        clearingSystemMemberId:
          allOf:
            - $ref: '#/components/schemas/clearingSystemMemberIdentification'
            - description: 'Information used to identify a member within a clearing system.'
        name:
          allOf:
            - $ref: '#/components/schemas/Max140Text'
            - description: 'Name of the financial institution'
        postalAddress:
          allOf:
            - $ref: '#/components/schemas/postalAddress'
            - description: 'Postal Address of the financial institution.'
        other:
          allOf:
            - $ref: '#/components/schemas/otherIdentification'
            - description: 'Unique identification of an organisation, as assigned by an institution, using an identification scheme.'


    clearingSystemMemberIdentification:
      allOf:
        - type: object
          properties:
            memberId:
              allOf:
                - $ref: '#/components/schemas/Max35Text'
                - description: 'Identification of a member of a clearing system.'
        - oneOf:
            - type: object
              properties:
                clearingSystemIdentificationCode: 
                  allOf:
                    - $ref: '#/components/schemas/ClearingSystemIdentificationCode'
                    - description: 'Identification of a clearing system, in a coded form as published in an external list.'
            - type: object
              properties:
                clearingSystemIdentificationProprietary:
                  allOf:
                    - $ref: '#/components/schemas/Max35Text'
                    - description: 'Identification code for a clearing sys-tem, that has not yet been identified in the list of clearing systems'


    ClearingSystemIdentificationCode:
      description: ExternalClearingSystemIdentification1Code
      type: string


    postalAddress:
      description: Postal address
      allOf:
        - oneOf:
          - type: object
            properties:
              addressLines:
                type: array
                items:
                  $ref: '#/components/schemas/Max140Text'
                description: 'At most seven entries are permitted. May only be used, if none of the structured address elements "streetName", "buildingNumber", "postcode" or "townName" is used. Remark: For SEPA transactions this is further restricted to a maximum of 2 entries.'
                maxItems: 7
          - $ref: '#/components/schemas/postalAddressStructured'
        - type: object
          properties:
            country:
              allOf:
                - $ref: '#/components/schemas/CountryCode'
                - description: 'Country code'


    postalAddressStructured:
      type: object
      properties:
        streetName: 
          allOf:
            - $ref: '#/components/schemas/Max70Text'
            - description: ' '
        buildingNumber:
          allOf:
            - $ref: '#/components/schemas/Max16Text'
            - description: ' '
        postCode:
          allOf:
            - $ref: '#/components/schemas/Max16Text'
            - description: ' '
        townName:
          allOf:
            - $ref: '#/components/schemas/Max35Text'
            - description: ' '
            


    otherIdentification:
      type: object
      description: Other identification
      allOf:
      - type: object
        required: 
          - identification
        properties:
          identification:
            allOf:
              - $ref: '#/components/schemas/Max35Text'
              - description: 'Unique and unambiguous identification of a person, an organisation or ac-count, depending on the context.'
      - oneOf:
        - type: object
          properties:
            schemeNameCode:
                allOf:
                  - $ref: '#/components/schemas/AccountIdentificationTypeCode'
                  - description: 'An entry provided by an external ISO code list'
        - type: object
          properties:
              schemeNameProprietary:
                allOf:
                  - $ref: '#/components/schemas/Max35Text'
                  - description: 'A scheme name defined in a proprietary way'
      - type: object
        properties:
          issuer:
            allOf:
              - $ref: '#/components/schemas/Max35Text'
              - description: 'Issuer of the identification'
      example:
        creditorIdentification: { 
            organisationId: {
              others: [
                identification: example1]
            }
        }


    AccountIdentificationTypeCode:
      type: string
      description: ExternalProxyAccountType1Code
    
    #####################################################
    # Predefined Text Formats
    #####################################################

    purposeCode:
      description: |
        ExternalPurpose1Code from ISO 20022.
        
        Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
        
      type: string
      enum:
        - "BKDF"
        - "BKFE"
        - "BKFM"
        - "BKIP"
        - "BKPP"
        - "CBLK"
        - "CDCB"
        - "CDCD"
        - "CDCS"
        - "CDDP"
        - "CDOC"
        - "CDQC"
        - "ETUP"
        - "FCOL"
        - "MTUP"
        - "ACCT"
        - "CASH"
        - "COLL"
        - "CSDB"
        - "DEPT"
        - "INTC"
        - "LIMA"
        - "NETT"
        - "BFWD"
        - "CCIR"
        - "CCPC"
        - "CCPM"
        - "CCSM"
        - "CRDS"
        - "CRPR"
        - "CRSP"
        - "CRTL"
        - "EQPT"
        - "EQUS"
        - "EXPT"
        - "EXTD"
        - "FIXI"
        - "FWBC"
        - "FWCC"
        - "FWSB"
        - "FWSC"
        - "MARG"
        - "MBSB"
        - "MBSC"
        - "MGCC"
        - "MGSC"
        - "OCCC"
        - "OPBC"
        - "OPCC"
        - "OPSB"
        - "OPSC"
        - "OPTN"
        - "OTCD"
        - "REPO"
        - "RPBC"
        - "RPCC"
        - "RPSB"
        - "RPSC"
        - "RVPO"
        - "SBSC"
        - "SCIE"
        - "SCIR"
        - "SCRP"
        - "SHBC"
        - "SHCC"
        - "SHSL"
        - "SLEB"
        - "SLOA"
        - "SWBC"
        - "SWCC"
        - "SWPT"
        - "SWSB"
        - "SWSC"
        - "TBAS"
        - "TBBC"
        - "TBCC"
        - "TRCP"
        - "AGRT"
        - "AREN"
        - "BEXP"
        - "BOCE"
        - "COMC"
        - "CPYR"
        - "GDDS"
        - "GDSV"
        - "GSCB"
        - "LICF"
        - "MP2B"
        - "POPE"
        - "ROYA"
        - "SCVE"
        - "SERV"
        - "SUBS"
        - "SUPP"
        - "TRAD"
        - "CHAR"
        - "COMT"
        - "MP2P"
        - "ECPG"
        - "ECPR"
        - "ECPU"
        - "EPAY"
        - "CLPR"
        - "COMP"
        - "DBTC"
        - "GOVI"
        - "HLRP"
        - "HLST"
        - "INPC"
        - "INPR"
        - "INSC"
        - "INSU"
        - "INTE"
        - "LBRI"
        - "LIFI"
        - "LOAN"
        - "LOAR"
        - "PENO"
        - "PPTI"
        - "RELG"
        - "RINP"
        - "TRFD"
        - "FORW"
        - "FXNT"
        - "ADMG"
        - "ADVA"
        - "BCDM"
        - "BCFG"
        - "BLDM"
        - "BNET"
        - "CBFF"
        - "CBFR"
        - "CCRD"
        - "CDBL"
        - "CFEE"
        - "CGDD"
        - "CORT"
        - "COST"
        - "CPKC"
        - "DCRD"
        - "DSMT"
        - "DVPM"
        - "EDUC"
        - "FACT"
        - "FAND"
        - "FCPM"
        - "FEES"
        - "GOVT"
        - "ICCP"
        - "IDCP"
        - "IHRP"
        - "INSM"
        - "IVPT"
        - "MCDM"
        - "MCFG"
        - "MSVC"
        - "NOWS"
        - "OCDM"
        - "OCFG"
        - "OFEE"
        - "OTHR"
        - "PADD"
        - "PTSP"
        - "RCKE"
        - "RCPT"
        - "REBT"
        - "REFU"
        - "RENT"
        - "REOD"
        - "RIMB"
        - "RPNT"
        - "RRBN"
        - "RVPM"
        - "SLPI"
        - "SPLT"
        - "STDY"
        - "TBAN"
        - "TBIL"
        - "TCSC"
        - "TELI"
        - "TMPG"
        - "TPRI"
        - "TPRP"
        - "TRNC"
        - "TRVC"
        - "WEBI"
        - "ANNI"
        - "CAFI"
        - "CFDI"
        - "CMDT"
        - "DERI"
        - "DIVD"
        - "FREX"
        - "HEDG"
        - "INVS"
        - "PRME"
        - "SAVG"
        - "SECU"
        - "SEPI"
        - "TREA"
        - "UNIT"
        - "FNET"
        - "FUTR"
        - "ANTS"
        - "CVCF"
        - "DMEQ"
        - "DNTS"
        - "HLTC"
        - "HLTI"
        - "HSPC"
        - "ICRF"
        - "LTCF"
        - "MAFC"
        - "MARF"
        - "MDCS"
        - "VIEW"
        - "CDEP"
        - "SWFP"
        - "SWPP"
        - "SWRS"
        - "SWUF"
        - "ADCS"
        - "AEMP"
        - "ALLW"
        - "ALMY"
        - "BBSC"
        - "BECH"
        - "BENE"
        - "BONU"
        - "CCHD"
        - "COMM"
        - "CSLP"
        - "GFRP"
        - "GVEA"
        - "GVEB"
        - "GVEC"
        - "GVED"
        - "GWLT"
        - "HREC"
        - "PAYR"
        - "PEFC"
        - "PENS"
        - "PRCP"
        - "RHBS"
        - "SALA"
        - "SSBE"
        - "LBIN"
        - "LCOL"
        - "LFEE"
        - "LMEQ"
        - "LMFI"
        - "LMRK"
        - "LREB"
        - "LREV"
        - "LSFL"
        - "ESTX"
        - "FWLV"
        - "GSTX"
        - "HSTX"
        - "INTX"
        - "NITX"
        - "PTXP"
        - "RDTX"
        - "TAXS"
        - "VATX"
        - "WHLD"
        - "TAXR"
        - "B112"
        - "BR12"
        - "TLRF"
        - "TLRR"
        - "AIRB"
        - "BUSB"
        - "FERB"
        - "RLWY"
        - "TRPT"
        - "CBTV"
        - "ELEC"
        - "ENRG"
        - "GASB"
        - "NWCH"
        - "NWCM"
        - "OTLC"
        - "PHON"
        - "UBIL"
        - "WTER"


    proprietaryBankTransactionCode:
      description: |
        Proprietary bank transaction code as used within a community or within an ASPSP e.g. 
        for MT94x based transaction reports.
      type: string
      maxLength: 35


    merchantCategoryCode:
      description: Merchant category code.
      type: string
      maxLength: 4
      minLength: 4
 
 
    frequencyCode:
      description: |
        The following codes from the "EventFrequency7Code" of ISO 20022 are supported:
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"
        - "MonthlyVariable"
      type: string
      enum:
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"
        - "MonthlyVariable"


    dayOfExecution:
      description: |
        Day of execution as string.
        
        This string consists of up two characters.
        Leading zeroes are not allowed.
        
        31 is ultimo of the month.
      type: string
      maxLength: 2
      enum: 
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"


    monthsOfExecution:
      description: |
        The format is following the regular expression \d{1,2}. 
        The array is restricted to 11 entries. 
        The values contained in the array entries shall all be different and the maximum value of one entry is 12.
        This attribute is contained if and only if the frequency equals "MonthlyVariable".
        Example: An execution on January, April and October each year is addressed by ["1", "4", "10"].
      type: array
      maxItems: 11
      items:
        type: string
        maxLength: 2
        enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - "10"
        - "11"
        - "12"


    executionRule:
      description: |
        "following" or "preceding" supported as values. 
        This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday. 
        The payment is then executed either the "preceding" or "following" working day.
        ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting 
        this execution rule.
      type: string
      enum:
        - "following"
        - "preceding"


    psuData:
      description: PSU Data for Update PSU authentication.
      type: object
      minProperties: 1
      properties:
        password:
          description: Password.
          type: string
        encryptedPassword:
          description: Encrypted password. 
          type: string
        additionalPassword:
          description: Additional password in plaintext.
          type: string
        additionalEncryptedPassword:
          description: Additional encrypted password.
          type: string


    psuMessageText:
      description: Text to be displayed to the PSU.
      type: string
      maxLength: 500
    
    
    creditorName:
      description: Creditor name.
      type: string
      maxLength: 70
      example: "Creditor Name"


    creditorId:
      description: Identification of Creditors, e.g. a SEPA Creditor ID.
      type: string
      maxLength: 35
      example: "Creditor Id 5678"


    creditorAgentName:
      description: Creditor agent name.
      type: string
      maxLength: 140
      example: "Creditor Agent Name"


    debtorName:
      description: Debtor name.
      type: string
      maxLength: 70
      example: "Debtor Name"


    ultimateDebtor:
      description: Ultimate debtor.
      type: string
      maxLength: 70
      example: "Ultimate Debtor"


    ultimateCreditor:
      description: Ultimate creditor.
      type: string
      maxLength: 70
      example: "Ultimate Creditor"

    #####################################################
    # Predefined Date and Time Related Formats
    #####################################################

    transactionDate:
      description: Date of the actual card transaction.
      type: string
      format: date


    startDate:
      description: |
        The first applicable day of execution starting from this date is the first payment.
      type: string
      format: date


    endDate:
      description: |
        The last applicable day of execution.
        If not given, it is an infinite standing order.
      type: string
      format: date


    bookingDate:
      description: |
        The date when an entry is posted to an account on the ASPSPs books.
      type: string
      format: date


#####################################################
# Content of Request Bodies
#####################################################



    #####################################################
    # Content of Request Bodies - JSON
    #####################################################

    subscriptionInitiation_json: 
      description: |
        Generic Body for a subscription initiation via JSON.
      type: object
      required:
        - subscriptionEntries
      properties:
        subscriptionEntries: 
          oneOf:
            - $ref: "#/components/schemas/arrayOfPushAccountEntrySubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushAccountStatementSubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushBalanceInformationSubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushRTPSubscriptionEntries"
        encryptionSupported:
          type: boolean
          description: If the flag is set to false, no encryption is provided by the ASPSP.
              If the flag is set to true, the ASPSP can choose to support encryption.
        encryptionCertificate:
          type: string
          description: The certificate to be used for encryption by the ASPSP in base64 encoding. 
              If not provided, no encryption will be provided.


    addSubscriptionEntry_json: 
      description: |
        Body for an add subscription entry request via JSON.
      type: object
      required:
        - subscriptionEntry
      properties:
        subscriptionEntry: 
          oneOf:
            - $ref: "#/components/schemas/pushAccountEntrySubscriptionEntry"
            - $ref: "#/components/schemas/pushAccountStatementSubscriptionEntry"
            - $ref: "#/components/schemas/pushBalanceInformationSubscriptionEntry"
            - $ref: "#/components/schemas/pushRTPSubscriptionEntry"


    pushAccountInformation_json: 
      description: |
        Body for a push account information request from the ASPSP to the API client via JSON.
      oneOf:
        - $ref: "#/components/schemas/pushAccountEntries_json"
        - $ref: "#/components/schemas/pushAccountStatement_json"
        - $ref: "#/components/schemas/pushBalanceInformation_json"
        - $ref: "#/components/schemas/pushRTP_json"


    updatePsuAuthentication: 
      description: |
        Content of the body of a Update PSU authentication request
        
        Password subfield is used.
      type: object
      required: 
        - psuData
      properties:
        psuData:
          $ref: "#/components/schemas/psuData"


    selectPsuAuthenticationMethod:
      description: |
        Content of the body of a Select PSU authentication method request
      type: object
      required: 
        - authenticationMethodId
      properties:
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"


    transactionAuthorisation:
      description: |
        Content of the body of a transaction authorisation request
      type: object
      required: 
        - scaAuthenticationData
      properties:
        scaAuthenticationData:
          $ref: "#/components/schemas/scaAuthenticationData"


    authorisationConfirmation:
      description: |
        Content of the body of an authorisation confirmation request
      type: object
      required: # conditional, empty body is covered in the definition of request body for Update PSU data
        - confirmationCode
      properties:
        confirmationCode:
          description: Confirmation Code as retrieved by the TPP from the redirect based SCA process.
          type: string


    #####################################################
    # Content of Request Bodies - XML
    #####################################################

      #####################################################
      # Content of Request Bodies - Single Part
      #####################################################

 
      #####################################################
      # Content of Request Bodies - XML -Multipart
      #####################################################


#####################################################
# Content of Response Bodies
#####################################################

    scaStatusResponse:
      description: Body of the JSON response with SCA Status.
      required: 
        - scaStatus
      type: object
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        _links:
          $ref: "#/components/schemas/_linksAll"
        tppMessages:
          type: array
          items: 
            $ref: "#/components/schemas/tppMessageGeneric"
          description: Messages to the TPP on operational issues.
        


    subscriptionInitiationResponse:
      description: Body of the JSON response for a subscription initiation request.
      type: object
      required:
        - subscriptionId
        - subscriptionStatus
        - _links
      properties:
        subscriptionStatus:
          $ref: "#/components/schemas/subscriptionStatus"
        subscriptionId:
          $ref: "#/components/schemas/subscriptionId"
        _links:
           $ref: "#/components/schemas/_linksInitiateSubscription"
           


    addSubscriptionEntryResponse:
      description: Body of the JSON response for an add subscription entry request.
      type: object
      required:
        - subscriptionEntryId
        - subscriptionEntryStatus
        - _links
      properties:
        subscriptionEntryStatus:
          $ref: "#/components/schemas/subscriptionEntryStatus"
        subscriptionEntryId:
          $ref: "#/components/schemas/subscriptionEntryId"
        _links:
           $ref: "#/components/schemas/_linksAddSubscriptionEntry"


    readSubscriptionDetailsResponse:
      description: Body of the JSON response for a read subscription details request.
      type: object
      required:
        - subscriptionStatus
        - subscriptionEntries
      properties:
        subscriptionStatus:
          $ref: "#/components/schemas/subscriptionStatus"
        subscriptionEntries: 
          oneOf:
            - $ref: "#/components/schemas/arrayOfPushAccountEntrySubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushAccountStatementSubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushBalanceInformationSubscriptionEntries"
            - $ref: "#/components/schemas/arrayOfPushRTPSubscriptionEntries"
        encryptionSupported:
          type: boolean
          description: If the flag is set to false, no encryption is provided by the ASPSP.
              If the flag is set to true, the ASPSP can choose to support encryption.
        encryptionCertificate:
          type: string
          description: The certificate to be used for encryption by the ASPSP in base64 encoding. 
              If not provided, no encryption will be provided.


    readSubscriptionEntryDetailsResponse:
      description: Body of the JSON response for a read subscription entry details request.
      type: object
      required:
        - subscriptionEntryStatus
        - subscriptionEntry
      properties:
        subscriptionEntryStatus:
          $ref: "#/components/schemas/subscriptionEntryStatus"
        subscriptionEntry: 
          oneOf:
            - $ref: "#/components/schemas/pushAccountEntrySubscriptionEntry"
            - $ref: "#/components/schemas/pushAccountStatementSubscriptionEntry"
            - $ref: "#/components/schemas/pushBalanceInformationSubscriptionEntry"
            - $ref: "#/components/schemas/pushRTPSubscriptionEntry"


    readSubscriptionEntryStatusResponse:
      description: Body of the JSON response for a read subscription entry status request.
      type: object
      required:
        - subscriptionEntryStatus
      properties:
        subscriptionEntryStatus:
          $ref: "#/components/schemas/subscriptionEntryStatus"


    readSubscriptionStatusResponse:
      description: Body of the JSON response for a read subscription status request.
      type: object
      required:
        - subscriptionStatus
      properties:
        subscriptionStatus:
          $ref: "#/components/schemas/subscriptionStatus"
        _links:
          type: array
          items:
            $ref: "#/components/schemas/_linksEntryStatusRevoked"
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"


    authorisationConfirmationResponse:
      description: Body of the JSON response for an authorisation confirmation request.
      type: object
      required:
        - scaStatus
        - _links
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatusAuthorisationConfirmation"
        _links:
          $ref: "#/components/schemas/_linksAuthorisationConfirmation"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    updatePsuIdentificationResponse:
      description: Body of the JSON response for a successful update PSU identification request.
      type: object
      required:
        - _links
        - scaStatus
      properties:
        transactionFees:
          # description: Might be used by the ASPSP to transport the total transaction fee relevant for the underlying payments. This field includes the entry of the currencyConversionFees if applicable.
          $ref: "#/components/schemas/amount"
        currencyConversionFees:
          # description: Might be used by the ASPSP to transport specific currency conversion fees related to the initiated credit transfer.
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          # description: The amount which is estimated to be debted from the debtor account. Note: This amount includes fees.
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          # description: The estimated amount to be transferred to the payee.
          $ref: "#/components/schemas/amount"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        _links:
          $ref: "#/components/schemas/_linksUpdatePsuIdentification"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    updatePsuAuthenticationResponse:
      description: Body of the JSON response for a successful update PSU authentication request.
      type: object
      required:
        - scaStatus
      properties:
        transactionFees:
          # description: Might be used by the ASPSP to transport the total transaction fee relevant for the underlying payments. This field includes the entry of the currencyConversionFees if applicable.
          $ref: "#/components/schemas/amount"
        currencyConversionFees:
          # description: Might be used by the ASPSP to transport specific currency conversion fees related to the initiated credit transfer. Note: This amount includes fees.
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          # description: The amount which is estimated to be debted from the debtor account.
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          # description: The estimated amount to be transferred to the payee.
          $ref: "#/components/schemas/amount"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        _links:
          $ref: "#/components/schemas/_linksUpdatePsuAuthentication"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    selectPsuAuthenticationMethodResponse:
      description: Body of the JSON response for a successful select PSU authentication method request.
      type: object
      required:
        - scaStatus
      properties:
        transactionFees:
          # description: Might be used by the ASPSP to transport the total transaction fee relevant for the underlying payments. This field includes the entry of the currencyConversionFees if applicable.
          $ref: "#/components/schemas/amount"
        currencyConversionFees:
          # description: Might be used by the ASPSP to transport specific currency conversion fees related to the initiated credit transfer. Note: This amount includes fees.
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          # description: The amount which is estimated to be debted from the debtor account.
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          # description: The estimated amount to be transferred to the payee.
          $ref: "#/components/schemas/amount"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
          $ref: "#/components/schemas/_linksSelectPsuAuthenticationMethod"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    startScaprocessResponse:
      description: Body of the JSON response for a Start SCA authorisation request.
      type: object
      required:
        - scaStatus
        - authorisationId
        - _links
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        authorisationId:
          $ref: "#/components/schemas/authorisationId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
           $ref: "#/components/schemas/_linksStartScaProcess"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    camt.052: 
      description: |
        camt.052 XML message.
      type: string


    camt.053:
      description: |
        camt.053 XML message.
      type: string


    camt.054: 
      description: |
        camt.054 XML message.
      type: string


    pain.013: 
      description: |
        pain.013 XML message.
      type: string


    mt940: 
      description: |
        Data MT940 format in a text structure. 
      type: string


    mt942: 
      description: |
        Data MT942 format in a text structure.
      type: string


#####################################################
# _links
#####################################################

    _linksAll:
      description: |
        A _link object with all available link types.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithProprietaryData:
          $ref: "#/components/schemas/hrefType"
        updateProprietaryData:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        account:
          $ref: "#/components/schemas/hrefType"
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"
        transactionDetails:
          $ref: "#/components/schemas/hrefType"
        cardAccount:
          $ref: "#/components/schemas/hrefType"
        cardTransactions:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"
        download:
          $ref: "#/components/schemas/hrefType"


    _linksGeneric:
      description: |
        A _link object containing any link types.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"


    _linksUpdatePsuIdentification:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP 
        defined extensions):
        
        - 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
        - 'selectAuthenticationMethod': This is a link to a resource, where the TPP can select the applicable second factor authentication methods for the PSU, if there are several available authentication methods and if the PSU is already sufficiently authenticated.. If this link is contained, then there is also the data element "scaMethods" contained in the response body.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"


    _linksUpdatePsuAuthentication:
      description: |
        A list of hyperlinks to be recognised by the TPP. Might be contained, if several authentication methods 
        are available for the PSU.
        Type of links admitted in this response:
          * 'updateAdditionalPsuAuthentication':
            The link to the payment initiation or account information resource, 
            which needs to be updated by an additional PSU password. 
            This link is only contained in rare cases, 
            where such additional passwords are needed for PSU authentications.
          * 'updateAdditionalEncryptedPsuAuthentication': 
            The link to the payment initiation or account information resource, 
            which needs to be updated by an additional encrypted PSU password. 
            This link is only contained in rare cases, where such additional passwords are needed for PSU authentications.
          * 'selectAuthenticationMethod': 
            This is a link to a resource, where the TPP can select the applicable second factor authentication 
            methods for the PSU, if there were several available authentication methods. 
            This link is only contained, if the PSU is already identified or authenticated with the first relevant 
            factor or alternatively an access token, if SCA is required and if the PSU has a choice between different 
            authentication methods. 
            If this link is contained, then there is also the data element 'scaMethods' contained in the response body.
          * 'authoriseTransaction': 
            The link to the resource, where the "Transaction authorisation request" is sent to. 
            This is the link to the resource which will authorise the transaction by checking the SCA authentication 
            data within the Embedded SCA approach.
          * 'scaStatus': 
            The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        updateAdditionalPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"


    _linksSelectPsuAuthenticationMethod:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in 
        the response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP. 
       
        **Remark:** This method can be applied before or after PSU identification. 
        This leads to many possible hyperlink responses.
        Type of links admitted in this response, (further links might be added for ASPSP defined 
        extensions):
        
        - 'scaRedirect': 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to 
          redirect the PSU browser.
        - 'scaOAuth': 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the 
          configuration of the Authorisation Server can be retrieved. 
          The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.
        * 'confirmation': 
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned 
          in the same response message. 
          This hyperlink defines the URL to the resource which needs to be updated with 
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP authentication server or
            * an access token as retrieved by submitting an authorization code after the integrated OAuth based authentication process with the ASPSP authentication server.
        - 'updatePsuIdentification': 
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU identification data needs to be uploaded.
        - 'updatePsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU authentication data needs to be uploaded.
          - 'updateEncryptedPsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU authentication encrypted data needs to be uploaded.
        - 'updateAdditionalPsuAuthentication':
            The link to the payment initiation or account information resource, 
            which needs to be updated by an additional PSU password. 
        - 'updateAdditionalEncryptedPsuAuthentication': 
            The link to the payment initiation or account information resource, 
            which needs to be updated by an additional encrypted PSU password. 
        - 'authoriseTransaction':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where the authorisation data has to be uploaded, e.g. the TOP received by SMS. 
        - 'scaStatus': 
          The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"


    _linksScaRelated: 
      description: |
        A list of hyperlinks to be recognised by the API client. The actual hyperlinks used in the 
        response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP defined 
        extensions):
        
        - 'scaRedirect': 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to 
          redirect the PSU browser.
        - 'scaOAuth': 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.
        * 'confirmation': 
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned 
          in the same response message. 
          This hyperlink defines the URL to the resource which needs to be updated with 
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP authentication server or
            * an access token as retrieved by submitting an authorization code after the integrated OAuth based authentication process with the ASPSP authentication server.
        - 'startAuthorisation':
          In case, where an explicit start of the authorisation is needed, but no more data needs to be updated (no authentication method to be selected, 
          no PSU identification nor PSU authentication data to be uploaded).
        - 'startAuthorisationWithPsuIdentification':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while uploading the PSU identification data.
        - 'startAuthorisationWithPsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU authentication data needs to be uploaded.
        - 'startAuthorisationWithEncryptedPsuAuthentication':
            Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on 
            application layer in uploading.
        - 'startAuthorisation WithAuthenticationMethodSelection':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while
          selecting the authentication method. This link is contained under exactly the same conditions as the data element"scaMethods"
        - 'startAuthorisationWithTransactionAuthorisation':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while authorising the subscription e.g. by uploading an OTP
          received by SMS.
        - 'scaStatus': 
          The link to retrieve the scaStatus of the corresponding authorisation sub-resource. 
        
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth: 
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        scaStatus: 
          $ref: "#/components/schemas/hrefType"


    _linksStartScaProcess: 
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the 
        response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP defined 
        extensions):
        
        - 'scaRedirect': 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to 
          redirect the PSU browser.
        - 'scaOAuth': 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.
        * 'confirmation': 
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned 
          in the same response message. 
          This hyperlink defines the URL to the resource which needs to be updated with 
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP authentication server or
            * an access token as retrieved by submitting an authorization code after the integrated OAuth based authentication process with the ASPSP authentication server.
        - 'updatePsuIdentification': 
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU identification data needs to be uploaded.
        - 'startAuthorisationWithPsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where PSU authentication data needs to be uploaded.
        - 'startAuthorisationWithEncryptedPsuAuthentication':
            Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on 
            application layer in uploading.
        - 'selectAuthenticationMethod':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where the selected authentication method needs to be uploaded. 
          This link is contained under exactly the same conditions as the data element 'scaMethods'.
        - 'authoriseTransaction':
          The link to the authorisation or cancellation authorisation sub-resource, 
          where the authorisation data has to be uploaded, e.g. the TOP received by SMS. 
        - 'scaStatus': 
          The link to retrieve the scaStatus of the corresponding authorisation sub-resource. 
        
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth: 
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification: 
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus: 
          $ref: "#/components/schemas/hrefType"


    _linksInitiateSubscription:
      allOf:
       - $ref: "#/components/schemas/_linksScaRelated"
       - type: object
         properties:
            self:
              allOf:
                - description: "The link to the subscription resource created by this request. This link can be used to retrieve the resource data."
                - $ref: "#/components/schemas/hrefType"
            status:
              allOf:
                - description: "The link to retrieve the subscritption status of the subscription."
                - $ref: "#/components/schemas/hrefType"


    _linksAddSubscriptionEntry:
      allOf:
       - $ref: "#/components/schemas/_linksScaRelated"
       - type: object
         properties:
            self:
              allOf:
                - description: "The link to the subscription enbtry resource created by this request. This link can be used to retrieve the resource data."
                - $ref: "#/components/schemas/hrefType"
            status:
              allOf:
                - description: "The link to retrieve the subscritption entry status of the subscription."
                - $ref: "#/components/schemas/hrefType"


    _linksTransactionDetails:
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      required:
        - transactionDetails
      properties:
        transactionDetails:
          $ref: "#/components/schemas/hrefType"


    _linksAuthorisationConfirmation:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP 
        defined extensions):
        
        - 'scaStatus': The link to retrieve the status of the corresponding transaction resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaStatus:
          $ref: "#/components/schemas/hrefType"


    _linksEntryStatusRevoked:
      description: |
        A hyperlink to an individual subscription entry that was within the lifecycle of the subscription included in the subscription but now has been revoked by the PSU.
      type: object
      properties:
        entryRevokedStatus:
          $ref: "#/components/schemas/hrefType"


#####################################################
# Tpp-Messages to Communicate Error Information
#####################################################


  #####################################################
  # Generic Elements
  #####################################################

    tppMessageCategory:
      description: Category of the TPP message category.
      type: string
      enum:
        - "ERROR"
        - "WARNING"


    tppMessageCodeGeneric:
      description: Code of the TPP message category.
      type: string
      #Currently, no restriction to enums is defined


    MessageCode400_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum: 
        - "FORMAT_ERROR"                          #gen
        - "PARAMETER_NOT_CONSISTENT"              #gen
        - "PARAMETER_NOT_SUPPORTED"               #gen
        - "SERVICE_INVALID"                       #gen
        - "RESOURCE_UNKNOWN"                      #gen
        - "RESOURCE_EXPIRED"                      #gen
        - "RESOURCE_BLOCKED"                      #gen
        - "TIMESTAMP_INVALID"                     #gen
        - "PERIOD_INVALID"                        #gen
        - "SCA_METHOD_UNKNOWN"                    #gen
        - "SCA_INVALID"                           #gen
        - "CONSENT_UNKNOWN"                       #gen
        - "SECONDARY_URI_NOT_SUPPORTED"           #PushAIS
        - "MIME_TYPE_NOT_SUPPORTED"               #PushAIS
        - "LIMIT_FOR_BALANCE_NOT_SUPPORTED"       #PushAIS
        - "ACCOUNT_CURRENCY_NOT_MATCHING"         #PushAIS
        - "BALANCE_TYPE_NOT_SUPPORTED"            #PushAIS


    MessageCode401_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum: 
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKE"        #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "PSU_CREDENTIALS_INVALID"   #gen
        - "CONSENT_INVALID"           #gen, AIS
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen


    MessageCode403_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum: 
        - "CONSENT_UNKNOWN"           #gen
        - "SERVICE_BLOCKED"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen


    MessageCode404_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 404 (NOT FOUND).
      type: string
      enum: 
        - "RESOURCE_UNKNOWN"          #gen


    MessageCode405_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum: 
        - "SERVICE_INVALID"           #gen


    MessageCode409_PushAIS_ASPSP: 
      description: Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 409 (CONFLICT).
      type: string
      enum: 
        - "STATUS_INVALID"                #gen
        - "PRIOR_SUBSCRIPTION_AVAILABLE"  #PushAIS specific


  #####################################################
  # Next Gen proprietary TPP-messages
  #####################################################


    tppMessageText:
      description: Additional explaining text to the TPP.
      type: string
      maxLength: 500


    tppMessageGeneric: 
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/tppMessageCodeGeneric"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage400_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage401_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage403_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage404_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage405_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


    tppMessage409_PushAIS_ASPSP:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409_PushAIS_ASPSP"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"


  #####################################################
  # RFC7807 Messages
  #####################################################

    tppErrorTitle:
      description: |
        Short human readable description of error type. 
        Could be in local language. 
        To be provided by ASPSPs.
      type: string
      maxLength: 70


    tppErrorDetail:
      description: |
        Detailed human readable text specific to this instance of the error. 
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 500


  #####################################################
  # RFC7807 Messages
  #####################################################


    Error400_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 400 for PushAIS (response from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error401_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 401 for PushAIS (from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error403_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 403 for PushAIS (from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error404_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 404 for PushAIS (from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error405_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 405 for PushAIS (from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error409_PushAIS_ASPSP: 
      description: |
        Standardised definition of reporting error information according to [RFC7807] 
        in case of a HTTP error code 409 for PushAIS (from the ASPSP's server).
      type: object
      required:
        - type
        - code
      properties:
        type: 
          description: |
            A URI reference [RFC3986] that identifies the problem type. 
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type. 
            Could be in local language. 
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error. 
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409_PushAIS_ASPSP"
        additionalErrors:
          description: |
            Array of Error Information Blocks.
            
            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807]. 
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/tppErrorTitle"
              detail:
                $ref: "#/components/schemas/tppErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error400_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage400_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error401_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage401_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error403_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage403_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error404_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage404_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error405_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 405.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage405_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error409_NG_PushAIS_ASPSP: 
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage409_PushAIS_ASPSP"
        _links:
          $ref: "#/components/schemas/_linksAll"
      example:
        [{
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 500 characters"
        }]


  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    pushAccountinformationSubservice:
      name: push-accountinformation-subservice
      in: path
      description: |
        push-accountinformation-subservice:
        The addressed subservice endpoint, e.g. for
        push-account-entries. The default list of sub
        services supported in this standard is:
        * push-account-entries
        * push-account-statements
        * push-balances
        * push-requests-to-pay
      required: true
      schema:
        type: string
        enum:
          - "push-account-entries"
          - "push-account-statements"
          - "push-balances"
          - "push-requests-to-pay"


    authorisationId:
      name: authorisationId
      in: path
      description: Resource identification of the related SCA.
      required: true
      schema:
        $ref: "#/components/schemas/authorisationId"


    subscriptionId:
      name: subscriptionId
      in: path
      description: |
        subscriptionId as received in the body of a (positive) initiateSubscription response
      required: true
      schema:
        type: string


    subscriptionEntryId:
      name: subscriptionEntryId
      in: path
      description: |
        subscriptionEntryId as received in the body of a (positive) initiateSubscription or addSubscriptionEntry response
      required: true
      schema:
        type: string


    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid


    Digest:
      name: Digest
      in: header
      description: Is contained if and only if the "Signature" element is contained in the header of the request.
      schema:
        type: string
      required: false # conditional
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="


    Signature:
      name: Signature
      in: header
      description: |
        A signature of the request by the TPP on application level. This might be mandated by ASPSP.
      schema:
        type: string
      required: false # conditional
      example: >
        keyId="SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE",algorithm="rsa-sha256",
        headers="Digest X-Request-ID PSU-ID TPP-Redirect-URI Date",
        signature="Base64(RSA-SHA256(signing string))"


    TPP-Signature-Certificate:
      name: TPP-Signature-Certificate
      in: header
      description: |
        The certificate used for signing the request, in base64 encoding. 
        Must be contained if a signature is contained.
      schema:
        type: string
        format: byte
      required: false # conditional


    TPP-Redirect-Preferred:
      name: TPP-Redirect-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers a redirect over an embedded SCA approach.
        If it equals "false", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled
        SCA approach, depending on the parameter TPP-Decoupled-Preferred and the choice of the SCA procedure by the TPP/PSU.
        If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the
        TPP/PSU.
      schema:
        type: boolean
      required: false


    TPP-Decoupled-Preferred:
      name: TPP-Decoupled-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers a decoupled SCA approach. 
        If it equals "false", the TPP prefers not to use the decoupled approach for SCA. The ASPSP will then choose between the embedded or the redirect SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. 
        If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the parameter TPP-Redirect-Preferred and the SCA method chosen by the TPP/PSU. 
        The parameter might be ignored by the ASPSP.
        If both parameters TPP-Redirect-Preferred and TPP-Decoupled-Preferred are present and true, the request is still not rejected, but it is up to the ASPSP, which approach will actually be used.
        
        **Remark for Future:** 
        TPP-Redirect-Preferred and TPP-Decoupled-Preferred will be revised in future versions, maybe merged. Currently kept separate for downward compatibility.
      schema:
        type: boolean
      required: false
      
      
    TPP-Redirect-URI:
      name: TPP-Redirect-URI
      in: header
      description: |
        URI of the TPP, where the transaction flow shall be redirected to after a Redirect.
        
        Mandated for the Redirect SCA Approach, specifically 
        when TPP-Redirect-Preferred equals "true".
        It is recommended to always use this header field.
        
        **Remark for Future:** 
        This field might be changed to mandatory in the next version of the specification.
      schema:
        type: string
        format: uri
      required: false # conditional


    TPP-Nok-Redirect-URI:
      name: TPP-Nok-Redirect-URI
      in: header
      description: |
        If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case
        of a negative result of the redirect SCA method. This might be ignored by the ASPSP.
      schema:
        type: string
        format: uri
      required: false


    Client-Explicit-Authorisation-Preferred:
      name: Client-Explicit-Authorisation-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers to start the authorisation process separately, 
        e.g. because of the usage of a signing basket. 
        This preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.
        
        If it equals "false" or if the parameter is not used, there is no preference of the TPP. 
        This especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, 
        without using a signing basket.
      schema:
        type: boolean
      required: false


    Client-Brand-Logging-Information:
      name: Client-Brand-Logging-Information
      in: header
      description: |
        This header might be used by TPPs to inform the ASPSP about the brand used by the TPP towards the PSU. 
        This information is meant for logging entries to enhance communication between ASPSP and PSU or ASPSP and TPP. 
        This header might be ignored by the ASPSP.

      schema:
        type: string
      required: false


    Client-Notification-URI:
      name: Client-Notification-URI
      in: header
      description: |
        URI for the Endpoint of the TPP-API to which the status of the ressource to be created should be sent.
        This header field may by ignored by the ASPSP.
        
        For security reasons, it shall be ensured that the Client-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:
        
        URIs which are provided by TPPs in Client-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.
        
        Wildcard definitions shall be taken into account for compliance checks by the ASPSP.
         ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.
      schema:
        type: string
      required: false


    Client-Notification-Content-Preferred:
      name: Client-Notification-Content-Preferred
      in: header
      description: |
        The string has the form 
        
        status=X1, ..., Xn
        
        where Xi is one of the constants SCA, PROCESS, LAST and where constants are not
        repeated.
        The usage of the constants supports the of following semantics:

          SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.
        
          PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.
          LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.

        This header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.
      schema:
        type: string
      required: false


    Contract-ID: 
      name: Contract-ID
      in: header
      description: |
        ID of the underlying service contract between API Client and ASPSP, resulting from API Client onboarding, following [oFA-OR-ADM].
        
        Only applies where a contract is mandated by the ASPSP.
      schema:
        type: string
      required: false
      example: "Contract-1234"


    PSU-ID: 
      name: PSU-ID
      in: header
      description: |
        Client ID of the PSU in the ASPSP client interface. 
        
        Might be mandated in the ASPSP's documentation.
        
        It might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding
        AIS service in the same session.
        In this case the ASPSP might check whether PSU-ID and token match, 
        according to ASPSP documentation.
      schema:
        type: string
      required: false
      example: "PSU-1234"


    PSU-ID-Type: 
      name: PSU-ID-Type
      in: header
      description: |
        Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
        
        In this case, the mean and use are then defined in the ASPSPâ€™s documentation.
      schema:
        type: string
      required: false


    PSU-Corporate-ID: 
      name: PSU-Corporate-ID
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false


    PSU-Corporate-ID-Type: 
      name: PSU-Corporate-ID-Type
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false


    PSU-IP-Address_mandatory:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
        If not available, the TPP shall use the IP Address used by the TPP when submitting this request.
      schema:
        type: string
        format: ipv4
      required: true
      example: 192.168.8.78


    PSU-IP-Address_optional:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78


    PSU-IP-Port:
      name: PSU-IP-Port
      in: header
      description: |
        The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.
      schema:
        type: string
      required: false
      example: "1234"


    PSU-Accept:
      name: PSU-Accept
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Charset:
      name: PSU-Accept-Charset
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Encoding:
      name: PSU-Accept-Encoding
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Language:
      name: PSU-Accept-Language
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-User-Agent:
      name: PSU-User-Agent
      in: header
      description: |
        The forwarded Agent header field of the HTTP request between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Http-Method:
      name: PSU-Http-Method
      in: header
      description: |
        HTTP method used at the PSU ? TPP interface, if available.
        Valid values are:
        * GET
        * POST
        * PUT
        * PATCH
        * DELETE
      schema:
        type: string
        enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
      required: false


    PSU-Device-ID:
      name: PSU-Device-ID
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.
        UUID identifies either a device or a device dependant application installation.
        In case of an installation identification this ID needs to be unaltered until removal from device.
      schema:
        type: string
        format: uuid
      required: false
      example: "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"

    PSU-Geo-Location:
      name: PSU-Geo-Location
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request between PSU and TPP if available.
      schema:
        type: string
        pattern: 'GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}'
      required: false
      example: GEO:52.506931;13.144558


  requestBodies:
  #####################################################
  # Reusable Request Bodies
  #####################################################
  
    subscriptionInitiation:
      description: |
        JSON request body for a subscription initiation request message.
      required: true
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/subscriptionInitiation_json"
  
    addSubscriptionEntry:
      description: |
        JSON request body for an add subscription entry request message.
      required: true
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/addSubscriptionEntry_json"

  
    pushAccountInformation:
      description: |
        Request body for a push account information request message.
      required: true
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/pushAccountInformation_json"
        application/xml:
          schema:
            description: 
              camt.05x can be used to transport Account Status Entries and Account Stetements
              pain.013 can be used to transport RTPs
            oneOf: #Different camt messages
              - $ref: "#/components/schemas/camt.052"
              - $ref: "#/components/schemas/camt.053"
              - $ref: "#/components/schemas/camt.054"
              - $ref: "#/components/schemas/pain.013"
        text/plain:
          schema:
            description:
              MT94x messages may be used for Account Statements (MT942 for account reports, MT940 for account statements) 
            oneOf: #Different MT94x
              - $ref: "#/components/schemas/mt940"
              - $ref: "#/components/schemas/mt942"

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################
  
    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    ASPSP-SCA-Approach:
      description: |
        This data element must be contained, if the SCA Approach is already fixed.
        Possible values are
          * EMBEDDED
          * DECOUPLED
          * REDIRECT
        The OAuth SCA approach will be subsumed by REDIRECT.
      schema:
        type: string
        enum:
          - "EMBEDDED"
          - "DECOUPLED"
          - "REDIRECT"
        example: "EMBEDDED"
      required: false

    ASPSP-Corporate:
      description: "This is a Boolean telling the API Client whether the addressed account is a corporate account (true) or not (false)."
      schema:
        type: boolean
      required: true

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false
      
    Location_mandatory:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: true
      
      


    #conditional for extended service lean push
    ASPSP-Notification-Support:
      description: |
        true if the ASPSP supports resource status notification services.
    
        false if the ASPSP supports resource status notification in general, but not for the current request.
    
        Not used, if resource status notification services are generally not supported by the ASPSP.
    
        Shall be supported if the ASPSP supports resource status notification services.
      schema:
        type: boolean       
      required: false
    
    ASPSP-Notification-Content:
      description: |
        The string has the form
        status=X1, â€¦, Xn
        where Xi is one of the constants SCA, PROCESS, LAST and where constants are not repeated.
        The usage of the constants supports the following semantics
        SCA - Notification on every change of the scaStatus attribute for all related authorisation processes is provided by the ASPSP for the related resource.
        PROCESS - Notification on all changes of consentStatus or transactionStatus attributes is provided by the ASPSP for the related resource
        LAST - Notification on the last consentStatus or transactionStatus as available in the XS2A interface is provided by the ASPSP for the related resource.
        This field must be provided if the ASPSP-Notification-Support=true. The ASPSP might consider the notification content as preferred by the TPP, but can also respond independently of the preferred request    
      schema:
        type: string        
      required: false
  responses:
  #####################################################
  # Reusable Responses
  #####################################################
    #####################################################
    # Positive Responses
    #####################################################


    OK_200_UpdatePsuData:
      description: OK 
      headers: 
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            oneOf: #Different Authorisation Bodies
              - $ref: "#/components/schemas/updatePsuIdentificationResponse" #Update PSU identification
              - $ref: "#/components/schemas/updatePsuAuthenticationResponse" #Update PSU authentication
              - $ref: "#/components/schemas/selectPsuAuthenticationMethodResponse" #Select authentication method
              - $ref: "#/components/schemas/scaStatusResponse" #Transaction Authorisation
              - $ref: "#/components/schemas/authorisationConfirmationResponse" #Authorisation Confirmation


    OK_200_ScaStatus:
      description: OK
      headers: 
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/scaStatusResponse"


    CREATED_201_SubscriptionInitiation:
      description: Created
      headers:
        ASPSP-Corporate:
          $ref: "#/components/headers/ASPSP-Corporate"
        Location:
          $ref: "#/components/headers/Location_mandatory"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
        #conditional for extended service lean Push
        ASPSP-Notification-Support:
          $ref: "#/components/headers/ASPSP-Notification-Support"
        ASPSP-Notification-Content:
          $ref: "#/components/headers/ASPSP-Notification-Content"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/subscriptionInitiationResponse"


    CREATED_201_SubscriptionEntry:
      description: Created
      headers:
        Location:
          $ref: "#/components/headers/Location_mandatory"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/addSubscriptionEntryResponse"


    CREATED_201_StartScaProcess:
      description: Created
      
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
        #conditional for extended service lean Push
        ASPSP-Notification-Support:
          $ref: "#/components/headers/ASPSP-Notification-Support"
        ASPSP-Notification-Content:
          $ref: "#/components/headers/ASPSP-Notification-Content"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/startScaprocessResponse"
          examples: 
            "Example 1: payments - Decoupled Approach": 
               $ref: "#/components/examples/startScaProcessResponseExample1"


    OK_200_ReadSubscriptionDetails:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readSubscriptionDetailsResponse"


    OK_200_ReadSubscriptionEntryDetails:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readSubscriptionEntryDetailsResponse"


    OK_200_ReadSubscriptionEntryStatus:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readSubscriptionEntryStatusResponse"


    OK_204_CancelSubscription:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    OK_200_ReadSubscriptionStatus: 
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readSubscriptionStatusResponse"

    OK_204_CancelSubscriptionEntry:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    ACCEPTED_204_PushAccountInformation_Client:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400_PushAIS_ASPSP:
      description: Bad Request
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_NG_PushAIS_ASPSP" 
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400_PushAIS_ASPSP" 


    UNAUTHORIZED_401_PushAIS_ASPSP:
      description: Unauthorized
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_NG_PushAIS_ASPSP" 
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error401_PushAIS_ASPSP" 


    FORBIDDEN_403_PushAIS_ASPSP:
      description: Forbidden
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG_PushAIS_ASPSP" 
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error403_PushAIS_ASPSP" 


    NOT_FOUND_404_PushAIS_ASPSP:
      description: Not found
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG_PushAIS_ASPSP" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error404_PushAIS_ASPSP" 


    METHOD_NOT_ALLOWED_405_PushAIS_ASPSP:
      description: Method Not Allowed
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_PushAIS_ASPSP" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error405_PushAIS_ASPSP" 


    REQUEST_TIMEOUT_408_PushAIS_ASPSP: 
      description: Request Timeout
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 408


    CONFLICT_409_PushAIS_ASPSP: 
      description: Conflict
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
             $ref: "#/components/schemas/Error409_NG_PushAIS_ASPSP"
          
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error409_PushAIS_ASPSP"


    UNSUPPORTED_MEDIA_TYPE_415_PushAIS_ASPSP:
      description: Unsupported Media Type
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 415 


    INTERNAL_SERVER_ERROR_500_PushAIS_ASPSP:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 500 


    SERVICE_UNAVAILABLE_503_PushAIS_ASPSP:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 503


    BAD_REQUEST_400_PushAIS_Client:
      description: Bad Request
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    UNAUTHORIZED_401_PushAIS_Client:
      description: Unauthorized
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    FORBIDDEN_403_PushAIS_Client:
      description: Forbidden
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    NOT_FOUND_404_PushAIS_Client:
      description: Not found
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    METHOD_NOT_ALLOWED_405_PushAIS_Client:
      description: Method Not Allowed
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    REQUEST_TIMEOUT_408_PushAIS_Client: 
      description: Request Timeout
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    UNSUPPORTED_MEDIA_TYPE_415_PushAIS_Client: 
      description: Request Timeout
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      # NO RESPONSE BODY


    INTERNAL_SERVER_ERROR_500_PushAIS_Client:
      description: Internal Server Error
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 500 


    SERVICE_UNAVAILABLE_503_PushAIS_Client:
      description: Service Unavailable
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 503

  examples:
  #####################################################
  # Predefined Examples
  #####################################################

    startScaProcessResponseExample1:
      value:
        { 
           "scaStatus": "received",
           "authorisationId": "123auth456",
           "psuMessage": "Please use your BankApp for transaction Authorisation.",
           "_links":
            {
              "scaStatus":  {"href":"/v1/payments/qwer3456tzui7890/authorisations/123auth456"}
            }
        }


    updatePsuAuthenticationExample_Embedded:
      description: Update PSU authentication request body for the embedded approach.
      value:
        {
          "psuData": {"password": "start12"}
        }


    selectPsuAuthenticationMethodExample_Embedded:
      description: Select PSU authentication method request body for the embedded approach.
      value:
        {
          authenticationMethodId: "myAuthenticationID"
        }


    transactionAuthorisationExample_Embedded:
      description: Transaction authorisation request body for the embedded approach.
      value:
        {
         "scaAuthenticationData": "123456"
        }


    authorisationConfirmationExample_Redirect:
      description: Authorisation confirmation request body for the redirect approach.
      value:
        { 
          "confirmationCode": "2256ffgh"
        }


    authorisationListExample:
      value:
        { 
          "authorisationIds": ["123auth456"]
        }
    


security:
  #####################################################
  # Global security options
  #####################################################
  - {}

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################

  - name: Push Account Information Service
    description: |
      A service to enable ASPSPs to inform PSUs via API Client
      systems about account information.
