/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 401 (UNAUTHORIZED).
 *
 * Values: CERTIFICATE_INVALID,ROLE_INVALID,CERTIFICATE_EXPIRED,CERTIFICATE_BLOCKED,CERTIFICATE_REVOKE,CERTIFICATE_MISSING,SIGNATURE_INVALID,SIGNATURE_MISSING,CORPORATE_ID_INVALID,PSU_CREDENTIALS_INVALID,CONSENT_INVALID,CONSENT_EXPIRED,TOKEN_UNKNOWN,TOKEN_INVALID,TOKEN_EXPIRED
 */

@JsonClass(generateAdapter = false)
enum class MessageCode401PushAISASPSP(val value: kotlin.String) {

    @Json(name = "CERTIFICATE_INVALID")
    CERTIFICATE_INVALID("CERTIFICATE_INVALID"),

    @Json(name = "ROLE_INVALID")
    ROLE_INVALID("ROLE_INVALID"),

    @Json(name = "CERTIFICATE_EXPIRED")
    CERTIFICATE_EXPIRED("CERTIFICATE_EXPIRED"),

    @Json(name = "CERTIFICATE_BLOCKED")
    CERTIFICATE_BLOCKED("CERTIFICATE_BLOCKED"),

    @Json(name = "CERTIFICATE_REVOKE")
    CERTIFICATE_REVOKE("CERTIFICATE_REVOKE"),

    @Json(name = "CERTIFICATE_MISSING")
    CERTIFICATE_MISSING("CERTIFICATE_MISSING"),

    @Json(name = "SIGNATURE_INVALID")
    SIGNATURE_INVALID("SIGNATURE_INVALID"),

    @Json(name = "SIGNATURE_MISSING")
    SIGNATURE_MISSING("SIGNATURE_MISSING"),

    @Json(name = "CORPORATE_ID_INVALID")
    CORPORATE_ID_INVALID("CORPORATE_ID_INVALID"),

    @Json(name = "PSU_CREDENTIALS_INVALID")
    PSU_CREDENTIALS_INVALID("PSU_CREDENTIALS_INVALID"),

    @Json(name = "CONSENT_INVALID")
    CONSENT_INVALID("CONSENT_INVALID"),

    @Json(name = "CONSENT_EXPIRED")
    CONSENT_EXPIRED("CONSENT_EXPIRED"),

    @Json(name = "TOKEN_UNKNOWN")
    TOKEN_UNKNOWN("TOKEN_UNKNOWN"),

    @Json(name = "TOKEN_INVALID")
    TOKEN_INVALID("TOKEN_INVALID"),

    @Json(name = "TOKEN_EXPIRED")
    TOKEN_EXPIRED("TOKEN_EXPIRED");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is MessageCode401PushAISASPSP) "$data" else null

        /**
         * Returns a valid [MessageCode401PushAISASPSP] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): MessageCode401PushAISASPSP? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

