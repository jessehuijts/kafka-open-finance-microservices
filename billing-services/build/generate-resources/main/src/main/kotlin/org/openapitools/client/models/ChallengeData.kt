/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the 'startAuthorisationWithPsuAuthentication' link. 
 *
 * @param image PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding, cp. [RFC4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method. 
 * @param `data` A collection of strings as challenge data.
 * @param imageLink A link where the ASPSP will provides the challenge image for the TPP.
 * @param otpMaxLength The maximal length for the OTP to be typed in by the PSU.
 * @param otpFormat The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\".
 * @param additionalInformation Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. 
 */


data class ChallengeData (

    /* PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding, cp. [RFC4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method.  */
    @Json(name = "image")
    val image: kotlin.ByteArray? = null,

    /* A collection of strings as challenge data. */
    @Json(name = "data")
    val `data`: kotlin.collections.List<kotlin.String>? = null,

    /* A link where the ASPSP will provides the challenge image for the TPP. */
    @Json(name = "imageLink")
    val imageLink: kotlin.String? = null,

    /* The maximal length for the OTP to be typed in by the PSU. */
    @Json(name = "otpMaxLength")
    val otpMaxLength: kotlin.Int? = null,

    /* The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\". */
    @Json(name = "otpFormat")
    val otpFormat: ChallengeData.OtpFormat? = null,

    /* Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU.  */
    @Json(name = "additionalInformation")
    val additionalInformation: kotlin.String? = null

) {

    /**
     * The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\".
     *
     * Values: characters,integer
     */
    @JsonClass(generateAdapter = false)
    enum class OtpFormat(val value: kotlin.String) {
        @Json(name = "characters") characters("characters"),
        @Json(name = "integer") integer("integer");
    }
}

