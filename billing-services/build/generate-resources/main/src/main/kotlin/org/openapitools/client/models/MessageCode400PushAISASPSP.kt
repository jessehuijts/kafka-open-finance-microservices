/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Message codes defined for Push AIS from the ASPSP's Server for HTTP Error code 400 (BAD_REQUEST).
 *
 * Values: FORMAT_ERROR,PARAMETER_NOT_CONSISTENT,PARAMETER_NOT_SUPPORTED,SERVICE_INVALID,RESOURCE_UNKNOWN,RESOURCE_EXPIRED,RESOURCE_BLOCKED,TIMESTAMP_INVALID,PERIOD_INVALID,SCA_METHOD_UNKNOWN,SCA_INVALID,CONSENT_UNKNOWN,SECONDARY_URI_NOT_SUPPORTED,MIME_TYPE_NOT_SUPPORTED,LIMIT_FOR_BALANCE_NOT_SUPPORTED,ACCOUNT_CURRENCY_NOT_MATCHING,BALANCE_TYPE_NOT_SUPPORTED
 */

@JsonClass(generateAdapter = false)
enum class MessageCode400PushAISASPSP(val value: kotlin.String) {

    @Json(name = "FORMAT_ERROR")
    FORMAT_ERROR("FORMAT_ERROR"),

    @Json(name = "PARAMETER_NOT_CONSISTENT")
    PARAMETER_NOT_CONSISTENT("PARAMETER_NOT_CONSISTENT"),

    @Json(name = "PARAMETER_NOT_SUPPORTED")
    PARAMETER_NOT_SUPPORTED("PARAMETER_NOT_SUPPORTED"),

    @Json(name = "SERVICE_INVALID")
    SERVICE_INVALID("SERVICE_INVALID"),

    @Json(name = "RESOURCE_UNKNOWN")
    RESOURCE_UNKNOWN("RESOURCE_UNKNOWN"),

    @Json(name = "RESOURCE_EXPIRED")
    RESOURCE_EXPIRED("RESOURCE_EXPIRED"),

    @Json(name = "RESOURCE_BLOCKED")
    RESOURCE_BLOCKED("RESOURCE_BLOCKED"),

    @Json(name = "TIMESTAMP_INVALID")
    TIMESTAMP_INVALID("TIMESTAMP_INVALID"),

    @Json(name = "PERIOD_INVALID")
    PERIOD_INVALID("PERIOD_INVALID"),

    @Json(name = "SCA_METHOD_UNKNOWN")
    SCA_METHOD_UNKNOWN("SCA_METHOD_UNKNOWN"),

    @Json(name = "SCA_INVALID")
    SCA_INVALID("SCA_INVALID"),

    @Json(name = "CONSENT_UNKNOWN")
    CONSENT_UNKNOWN("CONSENT_UNKNOWN"),

    @Json(name = "SECONDARY_URI_NOT_SUPPORTED")
    SECONDARY_URI_NOT_SUPPORTED("SECONDARY_URI_NOT_SUPPORTED"),

    @Json(name = "MIME_TYPE_NOT_SUPPORTED")
    MIME_TYPE_NOT_SUPPORTED("MIME_TYPE_NOT_SUPPORTED"),

    @Json(name = "LIMIT_FOR_BALANCE_NOT_SUPPORTED")
    LIMIT_FOR_BALANCE_NOT_SUPPORTED("LIMIT_FOR_BALANCE_NOT_SUPPORTED"),

    @Json(name = "ACCOUNT_CURRENCY_NOT_MATCHING")
    ACCOUNT_CURRENCY_NOT_MATCHING("ACCOUNT_CURRENCY_NOT_MATCHING"),

    @Json(name = "BALANCE_TYPE_NOT_SUPPORTED")
    BALANCE_TYPE_NOT_SUPPORTED("BALANCE_TYPE_NOT_SUPPORTED");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is MessageCode400PushAISASPSP) "$data" else null

        /**
         * Returns a valid [MessageCode400PushAISASPSP] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): MessageCode400PushAISASPSP? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

