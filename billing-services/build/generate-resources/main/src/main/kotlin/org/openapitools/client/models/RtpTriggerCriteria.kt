/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import kotlinx.serialization.Serializable

/**
 * This attribute is defining the incoming RTP requests to be pushed to the API Client push URI: All RTPs which are fulfilling all the criteria listed in this attribute will be pushed. If the attribute is not provided, all RTPs will be pushed as soon as they are arriving at the ASPSP's system.
 *
 * @param event \"afterReception\" is the only supported value.
 * @param timeToExpire Only forward incoming RTP with an expiry timestamp within that period, where the period is defined by the number of minutes as provided in this attribute. This criterion is meant to forward only short term RTPs.
 * @param expiryReminder This criterion is fulfilled if a long term RTP is still not confirmed 2 days before the RTP expires.
 */

@Serializable
data class RtpTriggerCriteria (

    /* \"afterReception\" is the only supported value. */
    @Json(name = "event")
    val event: RtpTriggerCriteria.Event? = null,

    /* Only forward incoming RTP with an expiry timestamp within that period, where the period is defined by the number of minutes as provided in this attribute. This criterion is meant to forward only short term RTPs. */
    @Json(name = "timeToExpire")
    val timeToExpire: kotlin.Int? = null,

    /* This criterion is fulfilled if a long term RTP is still not confirmed 2 days before the RTP expires. */
    @Json(name = "expiryReminder")
    val expiryReminder: kotlin.Boolean? = null

) {

    /**
     * \"afterReception\" is the only supported value.
     *
     * Values: afterReception
     */
    @JsonClass(generateAdapter = false)
    enum class Event(val value: kotlin.String) {
        @Json(name = "afterReception") afterReception("afterReception");
    }
}

