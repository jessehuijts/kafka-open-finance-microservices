    /*
    * This file was generated by the Gradle 'init' task.
    *
    * This generated file contains a sample Java application project to get you started.
    * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
    */
   import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

   plugins {
    id("org.springframework.boot") version "3.2.2"
    id("io.spring.dependency-management") version "1.1.4"
    kotlin("jvm") version "1.9.22"
    kotlin("plugin.spring") version "1.9.22"
    kotlin("plugin.jpa") version "1.9.22"
    id("org.openapi.generator") version "7.5.0"
   }
    

    repositories {
        // Use Maven Central for resolving dependencies.
        mavenCentral()
    }

    dependencies {
        // Use JUnit Jupiter for testing.
        testImplementation(libs.junit.jupiter)

        testRuntimeOnly("org.junit.platform:junit-platform-launcher")

        // This dependency is used by the application.
        implementation(libs.guava)
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation("org.springframework.boot:spring-boot-starter-data-rest")
        implementation("org.springframework.boot:spring-boot-starter-web")

        implementation("org.springframework.kafka:spring-kafka")
        implementation("org.apache.kafka:kafka-streams")

        implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

        // needed for openApiGenerate
        implementation("com.squareup.okhttp3:okhttp:4.11.0")
        implementation("com.squareup.moshi:moshi:1.15.0")
        implementation("com.squareup.moshi:moshi-kotlin:1.15.0")
        runtimeOnly("com.h2database:h2")
    }

    // Apply a specific Java toolchain to ease working on different environments.
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(22)
        }
    }

    openApiGenerate {
    inputSpec.set("$rootDir/psd2-api-push_account_information v1.0-20220516.yaml")
    generatorName.set("kotlin")
}

    sourceSets {
      main {
             java {
                 srcDir("$rootDir/app/build/generate-resources/main/src")
        }
    }
}

    // application {
    //     // Define the main class for the application.
    //     mainClass = "org.example.App"
    // }

    tasks.named<Test>("test") {
        // Use JUnit Platform for unit tests.
        useJUnitPlatform()
    }
